{"version":3,"file":"static/js/4790.023cad25.chunk.js","mappings":"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","sources":["components/pages/Base UI Elements/SweetAlert.js","components/pages/Base UI Elements/Toast.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\nimport {\r\n  getNewSessionTime,\r\n  getFinancialReportDownload,\r\n  downloadClosedLoanStatement,\r\n  downloadTranactionStatement,\r\n  cancelWithdrawalRequest,\r\n  nofreeParticipationapi,\r\n  handlePaymembershipapi,\r\n  feeApicall,\r\n  feeapicallforonedeal,\r\n  cancelMyWithdrawWalletRequest,\r\n  dealparticipationValidityUser,\r\n  newlenderdealparticipation,\r\n  confirmthependingamount,\r\n  submitWithdrawalRequestFromWallet,\r\n} from \"../../HttpRequest/afterlogin\";\r\nimport { toastrSuccess } from \"./Toast\";\r\n\r\nexport const HandleClick = () => {\r\n  Swal.fire({\r\n    title: \"Any fool can use a computer\",\r\n    confirmButtonClass: \"btn btn-primary\",\r\n    buttonsStyling: !1,\r\n  });\r\n};\r\nexport const HandleWithTitle = () => {\r\n  Swal.fire({\r\n    title: \"The Internet?,\",\r\n    text: \"That thing is still around?\",\r\n    confirmButtonClass: \"btn btn-primary\",\r\n    buttonsStyling: !1,\r\n  });\r\n};\r\nexport const HandleWithFooter = (message) => {\r\n  Swal.fire({\r\n    type: \"success\",\r\n    title: \"Congratulation\",\r\n    text: message,\r\n    confirmButtonClass: \"btn btn-primary\",\r\n    buttonsStyling: !1,\r\n  });\r\n};\r\n\r\nexport const topStart = () => {\r\n  Swal.fire({\r\n    position: \"top-start\",\r\n    type: \"success\",\r\n    title: \"Your work has been saved\",\r\n    showConfirmButton: !1,\r\n    timer: 1500,\r\n    confirmButtonClass: \"btn btn-primary\",\r\n    buttonsStyling: !1,\r\n  });\r\n};\r\nexport const topEnd = () => {\r\n  Swal.fire({\r\n    position: \"top-end\",\r\n    type: \"success\",\r\n    title: \"Your work has been saved\",\r\n    showConfirmButton: !1,\r\n    timer: 1500,\r\n    confirmButtonClass: \"btn btn-primary\",\r\n    buttonsStyling: !1,\r\n  });\r\n};\r\nexport const bottomStart = () => {\r\n  Swal.fire({\r\n    position: \"bottom-start\",\r\n    type: \"success\",\r\n    title: \"Your work has been saved\",\r\n    showConfirmButton: !1,\r\n    timer: 1500,\r\n    confirmButtonClass: \"btn btn-primary\",\r\n    buttonsStyling: !1,\r\n  });\r\n};\r\nexport const bottomEnd = () => {\r\n  Swal.fire({\r\n    position: \"bottom-end\",\r\n    type: \"success\",\r\n    title: \"Your work has been saved\",\r\n    showConfirmButton: !1,\r\n    timer: 1500,\r\n    confirmButtonClass: \"btn btn-primary\",\r\n    buttonsStyling: !1,\r\n  });\r\n};\r\n\r\nexport const Info = (message, data) => {\r\n  Swal.fire({\r\n    title: \"INFO!\",\r\n    text: message,\r\n    type: \"info\",\r\n    icon: \"info\",\r\n    confirmButtonClass: \"btn btn-primary\",\r\n    confirmButtonText: \"Add\",\r\n    cancelButtonText: \"cancel\",\r\n    showCloseButton: true,\r\n  }).then((result) => {\r\n    if (result.isConfirmed) {\r\n      const response = submitWithdrawalRequestFromWallet(data, \"ADD\");\r\n      response.then((data) => {\r\n        if (data.request.status == 200) {\r\n          HandleWithFooter(\r\n            \"Withdrawal request successful. You'll be notified when credited. Note: Funds will be in bank within 2-7 working days.\"\r\n          );\r\n        } else {\r\n          WarningAlertwithdrow(data.response.data.errorMessage);\r\n        }\r\n      });\r\n    }\r\n  });\r\n};\r\n\r\nexport const registersuccess = (message) => {\r\n  Swal.fire({\r\n    title: \"Success!\",\r\n    text: message,\r\n    type: \"info\",\r\n    confirmButtonClass: \"btn btn-primary\",\r\n    buttonsStyling: !1,\r\n    confirmButtonText: \"Login\",\r\n    showConfirmButton: true,\r\n  }).then((result) => {\r\n    if (result.isConfirmed) {\r\n      window.location.href = \"/\";\r\n    }\r\n  });\r\n};\r\nexport const WarningAlert = (errorMessage, redirectTo) => {\r\n  Swal.fire({\r\n    title: \"Session Expiring\",\r\n    text: errorMessage,\r\n    icon: \"warning\",\r\n    showDenyButton: true,\r\n    confirmButtonText: \"Sign Out\",\r\n    denyButtonText: \"Continue\",\r\n    denyButtonColor: \"#5c9b45\",\r\n  }).then((result) => {\r\n    if (result.isConfirmed) {\r\n      window.location.href = `${redirectTo}`;\r\n    } else if (result.isDenied) {\r\n      getNewSessionTime();\r\n      Swal.fire(\"Session!\", \"New session has Generated.\", \"success\");\r\n    }\r\n  });\r\n};\r\nexport const WarningAlertwithdrow = (errorMessage, redirectTo) => {\r\n  Swal.fire({\r\n    title: \"Error\",\r\n    text: errorMessage,\r\n    icon: \"warning\",\r\n  }).then((result) => {});\r\n};\r\n\r\nexport const validityDatemodal = (validityDate, groupName) => {\r\n  Swal.fire({\r\n    title: \"Membership reminder\",\r\n    html: `<p style={{marginBottom: '2px'}}> ${\r\n      groupName == \"NewLender\"\r\n        ? \" Membership reminder\"\r\n        : \"Your membership validity expired\"\r\n    }   ${validityDate == null ? \"\" : validityDate}.</p>`,\r\n    icon: \"warning\",\r\n    showCancelButton: true,\r\n    confirmButtonColor: \"#3085d6\",\r\n    cancelButtonColor: \"#d33\",\r\n    confirmButtonText: \"Get Membership\",\r\n    cancelButtonText: \"Skip\", // Add this line to set the text for the Cancel button\r\n  }).then((result) => {\r\n    if (result.isConfirmed) {\r\n      // User clicked \"Get Membership\"\r\n      window.location.href = \"/membership\";\r\n    } else if (result.dismiss === Swal.DismissReason.cancel) {\r\n      localStorage.setItem(\"skip\", true);\r\n    }\r\n  });\r\n};\r\n\r\nexport const dealmembership = (message, route) => {\r\n  Swal.fire({\r\n    title: message,\r\n    html: `<p style={{marginBottom: '2px'}}></p>`,\r\n    icon: \"warning\",\r\n    showCancelButton: true,\r\n    confirmButtonColor: \"#3085d6\",\r\n    cancelButtonColor: \"#d33\",\r\n    confirmButtonText: \"update\",\r\n    cancelButtonText: \"Skip\", // Add this line to set the text for the Cancel button\r\n  }).then((result) => {\r\n    if (result.isConfirmed) {\r\n      window.location.href = route;\r\n    } else if (result.dismiss === Swal.DismissReason.cancel) {\r\n      localStorage.setItem(\"dealmember\", true);\r\n    }\r\n  });\r\n};\r\nexport const personalDetails = (message, route) => {\r\n  Swal.fire({\r\n    title: message,\r\n    html: `<p style={{marginBottom: '2px'}}></p>`,\r\n    icon: \"warning\",\r\n    showCancelButton: true,\r\n    confirmButtonColor: \"#3085d6\",\r\n    cancelButtonColor: \"#d33\",\r\n    confirmButtonText: \"update\",\r\n    cancelButtonText: \"Skip\",\r\n  }).then((result) => {\r\n    if (result.isConfirmed) {\r\n      window.location.href = route;\r\n    } else if (result.dismiss === Swal.DismissReason.cancel) {\r\n      localStorage.setItem(\"profileskip\", true);\r\n    }\r\n  });\r\n};\r\n\r\nexport const participatedapi = async (deal) => {\r\n  const payoutmethod = localStorage.getItem(\"choosenPayOutOption\");\r\n  Swal.fire({\r\n    title: \"Please review the lending details!\",\r\n    html: `<p><strong> Lending Amount :- INR </strong>${deal.participatedAmount}</p>\r\n           <p><strong> Deal Name : </strong>${deal.apidata.dealName}</p>\r\n           <p><strong> Pay-out Method : </strong>${payoutmethod}</p>`,\r\n    icon: \"info\",\r\n    showCancelButton: true,\r\n    confirmButtonColor: \"#3085d6\",\r\n    cancelButtonColor: \"#d33\",\r\n    confirmButtonText: \"Ok!\",\r\n  }).then((result) => {\r\n    if (result.isConfirmed) {\r\n      if (deal.apidata.feeStatusToParticipate == \"OPTIONAL\") {\r\n        const response = dealparticipationValidityUser(deal);\r\n        response.then((data) => {\r\n          if (data.request.status === 200) {\r\n            Swal.fire({\r\n              title: \"Congratulations!\",\r\n              text: `We are reserving ${deal.participatedAmount} for ${deal.apidata.dealName}. `,\r\n              icon: \"success\",\r\n              showCancelButton: true,\r\n              confirmButtonColor: \"#3085d6\",\r\n              cancelButtonColor: \"#d33\",\r\n              confirmButtonText: \"OK\",\r\n            });\r\n          } else {\r\n            Swal.fire({\r\n              title: \"Error!\",\r\n              text: `${data.response.data.errorMessage}`,\r\n              icon: \"error\",\r\n              showCancelButton: true,\r\n              confirmButtonColor: \"#3085d6\",\r\n              cancelButtonColor: \"#d33\",\r\n              confirmButtonText: \"OK\",\r\n            });\r\n          }\r\n        });\r\n      } else {\r\n        if (deal.apidata.groupName == \"NewLender\") {\r\n          const response = newlenderdealparticipation(deal);\r\n          var newLenderFeePercentage =\r\n            (parseInt(deal.participatedAmount) * 1) / 100;\r\n          var newLenderGstAndFeeCalculation =\r\n            (newLenderFeePercentage * 118) / 100;\r\n          response.then((data) => {\r\n            if (data.request.status === 200) {\r\n              Swal.fire({\r\n                title: \"Congratulations!\",\r\n                text: `We are reserving ${deal.participatedAmount} for ${deal.apidata.dealName} .please pay the INR ${newLenderGstAndFeeCalculation}\r\n\t\t\t\t\t    \t for the deal processing fee. `,\r\n                icon: \"success\",\r\n                showCancelButton: true,\r\n                cancelButtonText: \"cancel\",\r\n                showConfirmButton: true,\r\n                confirmButtonText: \"Pay Fee\",\r\n              }).then(async (result) => {\r\n                if (result.isConfirmed) {\r\n                  const res = feeapicallforonedeal(\r\n                    newLenderGstAndFeeCalculation,\r\n                    deal.urldealId\r\n                  );\r\n                  res.then((data) => {\r\n                    if (data.request.status === 200) {\r\n                      Swal.fire({\r\n                        title: \"Congratulations!\",\r\n                        text: `You have successfully paid the fee`,\r\n                        icon: \"success\",\r\n                        showCancelButton: true,\r\n                        cancelButtonText: \"cancel\",\r\n                        showConfirmButton: true,\r\n                        confirmButtonText: \"ok\",\r\n                      });\r\n                    } else {\r\n                      Swal.fire({\r\n                        title: \"Error!\",\r\n                        text: `${data.response.data.errorMessage}`,\r\n                        icon: \"error\",\r\n                        showCancelButton: true,\r\n                        cancelButtonText: \"cancel\",\r\n                        showConfirmButton: true,\r\n                        confirmButtonText: \"ok\",\r\n                      });\r\n                    }\r\n                  });\r\n                }\r\n              });\r\n            } else {\r\n              console.log(data.response);\r\n\r\n              if (data.response.data.errorCode == \"123\") {\r\n                let paymentErrormessage =\r\n                  data.response.data.errorMessage.match(/\\d+(\\.\\d+)?/g);\r\n\r\n                Swal.fire({\r\n                  title: \"Fee Alert\",\r\n                  text: `${data.response.data.errorMessage}`, // Displaying the error message\r\n                  icon: \"info\",\r\n                  showCancelButton: true,\r\n                  cancelButtonText: \"cancel\",\r\n                  showConfirmButton: true,\r\n                  confirmButtonText: \"Wallet\",\r\n                }).then(async (result) => {\r\n                  if (result.isConfirmed) {\r\n                    paypendingprocessingAmount(\r\n                      paymentErrormessage[1],\r\n                      parseInt(paymentErrormessage[0])\r\n                    );\r\n                  }\r\n                });\r\n              } else {\r\n                Swal.fire({\r\n                  title: \"Error!\",\r\n                  text: `${data.response.data.errorMessage}`, // Displaying the error message\r\n                  icon: \"error\",\r\n                  showCancelButton: true,\r\n                  cancelButtonText: \"cancel\",\r\n                  showConfirmButton: true,\r\n                  confirmButtonText: \"ok\",\r\n                });\r\n              }\r\n            }\r\n          });\r\n        } else if (\r\n          deal.apidata.lenderValidityStatus == true &&\r\n          deal.apidata.groupName != \"NewLender\"\r\n        ) {\r\n          const membershipExpiredUser = membership(\r\n            deal.urldealId,\r\n            deal,\r\n            deal.participatedAmount\r\n          );\r\n        } else if (\r\n          deal.apidata.lenderValidityStatus == false &&\r\n          deal.apidata.groupName != \"NewLender\"\r\n        ) {\r\n          const response = dealparticipationValidityUser(deal);\r\n          response.then((data) => {\r\n            if (data.request.status === 200) {\r\n              Swal.fire({\r\n                title: \"Congratulations!\",\r\n                text: `We are reserving ${deal.participatedAmount} for ${deal.apidata.dealName}.`,\r\n                icon: \"success\",\r\n                showCancelButton: true,\r\n                cancelButtonText: \"cancel\",\r\n                showConfirmButton: true,\r\n                confirmButtonText: \"ok\",\r\n              });\r\n            } else {\r\n              Swal.fire({\r\n                title: \"Error!\",\r\n                text: `${data.response.data.errorMessage}`,\r\n                icon: \"error\",\r\n                showCancelButton: true,\r\n                cancelButtonText: \"cancel\",\r\n                showConfirmButton: true,\r\n                confirmButtonText: \"ok\",\r\n              });\r\n            }\r\n          });\r\n        }\r\n      }\r\n    }\r\n  });\r\n};\r\n\r\nexport const membership = async (dealId, dealInfo, participatedAmount) => {\r\n  let amount;\r\n  let calculate;\r\n  const tenure = {\r\n    monthly: 1000,\r\n    quarterly: 2900,\r\n    halfyearly: 5600,\r\n    peryear: 9800,\r\n    lifetime: 100000,\r\n    fiveyears: 50000,\r\n    tenyears: 90000,\r\n    PerDeal: participatedAmount,\r\n  };\r\n  const inputOptions = new Promise((resolve) => {\r\n    setTimeout(() => {\r\n      resolve({\r\n        monthly: \"One Month\",\r\n        quarterly: \"Quarterly\",\r\n        halfyearly: \"Half-Yearly\",\r\n        peryear: \"One Year\",\r\n        lifetime: \"Five Years\",\r\n        fiveyears: \"Ten Years\",\r\n        tenyears: \"Life Time\",\r\n        PerDeal: \"PerDeal\",\r\n      });\r\n    }, 1000);\r\n  });\r\n\r\n  const { value: choosenPayoutMethod } = await Swal.fire({\r\n    title: \"Select Payment Method\",\r\n    width: \"1100px\",\r\n    input: \"radio\",\r\n    inputOptions,\r\n    cancelButtonText: \"Cancel\",\r\n    inputValidator: (value) => {\r\n      if (!value) {\r\n        return \"You need to choose Payment Method!\";\r\n      }\r\n    },\r\n  });\r\n\r\n  if (choosenPayoutMethod) {\r\n    const selectedOption = choosenPayoutMethod;\r\n    if (selectedOption == \"PerDeal\") {\r\n      amount = tenure[selectedOption];\r\n      const onepercentage = (amount * 1) / 100;\r\n      calculate = (onepercentage * 118) / 100;\r\n    } else {\r\n      amount = tenure[selectedOption];\r\n      calculate = (amount * 118) / 100;\r\n    }\r\n\r\n    Swal.fire({\r\n      html: `You selected: ${choosenPayoutMethod}  membership tenure and you have to pay the ${calculate} to participate the deal `,\r\n      showCancelButton: true,\r\n      confirmButtonText: \"Pay & Participate\",\r\n      cancelButtonText: \"Cancel\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        feeApicall(calculate, selectedOption).then((response) => {\r\n          if (response.request.status === 200) {\r\n            const responseValidity = dealparticipationValidityUser(dealInfo);\r\n            responseValidity.then((data) => {\r\n              if (data.request.status === 200) {\r\n                Swal.fire({\r\n                  title: \"Congratulations!\",\r\n                  text: `We are reserving ${dealInfo.participatedAmount} for ${dealInfo.apidata.dealName}. `,\r\n                  icon: \"success\",\r\n                  showCancelButton: true,\r\n                  cancelButtonText: \"cancel\",\r\n                  showConfirmButton: true,\r\n                  confirmButtonText: \"ok\",\r\n                });\r\n              } else {\r\n                Swal.fire({\r\n                  title: \"Error!\",\r\n                  text: `${data.response.data.errorMessage}`, // Displaying the error message\r\n                  icon: \"error\",\r\n                  showCancelButton: true,\r\n                  cancelButtonText: \"cancel\",\r\n                  showConfirmButton: true,\r\n                  confirmButtonText: \"ok\",\r\n                });\r\n              }\r\n            });\r\n          } else {\r\n            Swal.fire({\r\n              title: \"Error!\",\r\n              text: `${data.response.data.errorMessage}`, // Displaying the error message\r\n              icon: \"error\",\r\n              showCancelButton: true,\r\n              cancelButtonText: \"cancel\",\r\n              showConfirmButton: true,\r\n              confirmButtonText: \"ok\",\r\n            });\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n};\r\n\r\nexport const newlenderfree = (amount, dealId) => {\r\n  const freeamount = (amount * 1) / 100;\r\n\r\n  Swal.fire({\r\n    title: \"Congratulations on successfully completing your participation!\",\r\n    text: `To finalize the process, a nominal 1%  Rs:${freeamount} /- processing fee is required. Kindly submit the payment at your earliest convenience.`,\r\n    icon: \"success\",\r\n    showCancelButton: true,\r\n    cancelButtonText: \"cancel\",\r\n    showConfirmButton: true,\r\n    confirmButtonText: \"ok\",\r\n  }).then((result) => {\r\n    if (result.isConfirmed) {\r\n      feeapicallforonedeal(freeamount, dealId)\r\n        .then((data) => {\r\n          Swal.fire({\r\n            title: \"Processing fee paid successfully!\",\r\n            // text: `${data.data.status}`,\r\n            icon: \"success\",\r\n            showCancelButton: true,\r\n            cancelButtonText: \"cancel\",\r\n            showConfirmButton: true,\r\n            confirmButtonText: \"ok\",\r\n          });\r\n          localStorage.removeItem(\"participatedAmount\");\r\n          localStorage.removeItem(\"newLender\");\r\n        })\r\n        .catch((error) => {});\r\n    }\r\n  });\r\n};\r\n\r\nexport const WarningAlertWalltTran = (errorMessage, redirectTo) => {\r\n  Swal.fire({\r\n    title: \"error\",\r\n    text: errorMessage,\r\n    icon: \"warning\",\r\n    showCancelButton: true,\r\n    cancelButtonText: \"cancel\",\r\n    showConfirmButton: true,\r\n    confirmButtonText: \"ok\",\r\n  }).then((result) => {});\r\n};\r\nexport const PrincipalTransfer = (warningType, errormessage) => {\r\n  Swal.fire(\"Principal Payout!\", errormessage, warningType);\r\n  setTimeout(() => {\r\n    window.location.reload();\r\n  }, 3000);\r\n};\r\n\r\nexport const WarningAlerterror = (errorMessage, redirectTo) => {\r\n  Swal.fire({\r\n    title: \"error\",\r\n    text: errorMessage,\r\n    icon: \"error\",\r\n    showDenyButton: true,\r\n    showCancelButton: true,\r\n    cancelButtonText: \"cancel\",\r\n    showConfirmButton: true,\r\n    confirmButtonText: \"ok\",\r\n  });\r\n};\r\nexport const Error = () => {\r\n  Swal.fire({\r\n    title: \"Error!\",\r\n    text: \" You clicked the button!\",\r\n    type: \"error\",\r\n    confirmButtonClass: \"btn btn-primary\",\r\n    buttonsStyling: !1,\r\n    showCancelButton: true,\r\n    cancelButtonText: \"cancel\",\r\n    showConfirmButton: true,\r\n    confirmButtonText: \"ok\",\r\n  });\r\n};\r\nexport const membershipsweetalert = (message) => {\r\n  Swal.fire(message);\r\n};\r\n\r\nexport const membershipsweetalertconformation = (membership, no) => {\r\n  Swal.fire({\r\n    title: \"Are you willing to proceed with the payment at this moment ?\",\r\n    showDenyButton: false,\r\n    showCancelButton: true,\r\n    confirmButtonText: \"Pay Through wallet\",\r\n    denyButtonText: \"Payment Gateway\",\r\n  }).then((result) => {\r\n    if (result.isConfirmed) {\r\n      const response = handlePaymembershipapi(membership, no);\r\n      response.then((data) => {\r\n        if (data.status == 200) {\r\n          Swal.fire(\"Success!\", `Payment received successfully!`, \"success\");\r\n          setTimeout(() => {\r\n            window.location.href = `/dashboard`;\r\n          }, 5000);\r\n        } else {\r\n          membershipsweetalert(data.response.data.errorMessage);\r\n        }\r\n      });\r\n    } else if (result.isDenied) {\r\n      return \"dined\";\r\n    } else if (result.dismiss) {\r\n      console.log(\"dismiss\");\r\n    }\r\n  });\r\n};\r\n\r\nexport const newlendersweetalert = () => {\r\n  const navigate = useNavigate();\r\n\r\n  Swal.fire({\r\n    title:\r\n      \"You are a new lender group, pay the annual membership fee to participate in the multiple deals. ?\",\r\n    showDenyButton: true,\r\n    confirmButtonText: \"Pay Through wallet\",\r\n  }).then((result) => {\r\n    if (result.isConfirmed) {\r\n      navigate(\"/membership\");\r\n    }\r\n  });\r\n};\r\nexport const autoClose = () => {\r\n  var t;\r\n  Swal.fire({\r\n    title: \"Auto close alert!\",\r\n    html: \"I will close in <strong></strong> seconds.\",\r\n    timer: 2e3,\r\n    confirmButtonClass: \"btn btn-primary\",\r\n    buttonsStyling: !1,\r\n    onBeforeOpen: function () {\r\n      Swal.showLoading(),\r\n        (t = setInterval(function () {\r\n          Swal.getContent().querySelector(\"strong\").textContent =\r\n            Swal.getTimerLeft();\r\n        }, 100));\r\n    },\r\n    onClose: function () {\r\n      clearInterval(t);\r\n    },\r\n  }).then(function (t) {\r\n    t.dismiss === Swal.DismissReason.timer &&\r\n      console.log(\"I was closed by the timer\");\r\n  });\r\n};\r\nexport const outsideClick = () => {\r\n  Swal.fire({\r\n    title: \"Click outside to close!\",\r\n    text: \"This is a cool message!\",\r\n    allowOutsideClick: !0,\r\n    confirmButtonClass: \"btn btn-primary\",\r\n    buttonsStyling: !1,\r\n  });\r\n};\r\nexport const Prompt = () => {\r\n  Swal.fire({\r\n    input: \"text\",\r\n    confirmButtonText: \"Next &rarr;\",\r\n    showCancelButton: !0,\r\n    progressSteps: [\"1\", \"2\", \"3\"],\r\n    confirmButtonClass: \"btn btn-primary\",\r\n    buttonsStyling: !1,\r\n    cancelButtonClass: \"btn btn-danger ml-1\",\r\n  })\r\n    .queue([\r\n      { title: \"Question 1\", text: \"Chaining swal2 modals is easy\" },\r\n      \"Question 2\",\r\n      \"Question 3\",\r\n    ])\r\n    .then(function (t) {\r\n      t.value &&\r\n        Swal.fire({\r\n          title: \"All done!\",\r\n          html:\r\n            \"Your answers: <pre><code>\" +\r\n            JSON.stringify(t.value) +\r\n            \"</code></pre>\",\r\n          confirmButtonText: \"Lovely!\",\r\n        });\r\n    });\r\n};\r\nexport const confirmText = () => {\r\n  Swal.fire({\r\n    title: \"Are you sure?\",\r\n    text: \"You won't be able to revert this!\",\r\n    type: \"warning\",\r\n    showCancelButton: !0,\r\n    confirmButtonColor: \"#3085d6\",\r\n    cancelButtonColor: \"#d33\",\r\n    confirmButtonText: \"Yes, delete it!\",\r\n    confirmButtonClass: \"btn btn-primary\",\r\n    cancelButtonClass: \"btn btn-danger ml-1\",\r\n    buttonsStyling: !1,\r\n  }).then(function (t) {\r\n    t.value &&\r\n      Swal.fire({\r\n        type: \"success\",\r\n        title: \"Deleted!\",\r\n        text: \"Your file has been deleted.\",\r\n        confirmButtonClass: \"btn btn-success\",\r\n      });\r\n  });\r\n};\r\nexport const confirmColor = () => {\r\n  Swal.fire({\r\n    title: \"Are you sure?\",\r\n    text: \"You won't be able to revert this!\",\r\n    type: \"warning\",\r\n    showCancelButton: !0,\r\n    confirmButtonColor: \"#3085d6\",\r\n    cancelButtonColor: \"#d33\",\r\n    confirmButtonText: \"Yes, delete it!\",\r\n    confirmButtonClass: \"btn btn-primary\",\r\n    cancelButtonClass: \"btn btn-danger ml-1\",\r\n    buttonsStyling: !1,\r\n  }).then(function (t) {\r\n    t.value\r\n      ? Swal.fire({\r\n          type: \"success\",\r\n          title: \"Deleted!\",\r\n          text: \"Your file has been deleted.\",\r\n          confirmButtonClass: \"btn btn-success\",\r\n        })\r\n      : t.dismiss === Swal.DismissReason.cancel &&\r\n        Swal.fire({\r\n          title: \"Cancelled\",\r\n          text: \"Your imaginary file is safe :)\",\r\n          type: \"error\",\r\n          confirmButtonClass: \"btn btn-success\",\r\n        });\r\n  });\r\n};\r\n\r\nexport const confirmationAlertFyYear = (startdate, enddate, downloadType) => {\r\n  Swal.fire({\r\n    title: \"Are you sure?\",\r\n    text: `You want to ${\r\n      downloadType == \"DOWNLOAD\"\r\n        ? \"Download the FY Statement\"\r\n        : \"Get FY Email Statement\"\r\n    } `,\r\n    icon: \"info\",\r\n    showCancelButton: true,\r\n    confirmButtonColor: \"#3085d6\",\r\n    cancelButtonColor: \"#d33\",\r\n    confirmButtonText: \"Yes !\",\r\n  }).then((result) => {\r\n    if (result.isConfirmed) {\r\n      const response = getFinancialReportDownload(\r\n        startdate,\r\n        enddate,\r\n        downloadType\r\n      );\r\n      response.then((data) => {\r\n        if (data.request.status == 200) {\r\n          if (downloadType == \"DOWNLOAD\") {\r\n            window.open(data.data.lenderProfit, \"_blank\");\r\n          }\r\n          Swal.fire(\r\n            \"Success!\",\r\n            `${\r\n              downloadType == \"DOWNLOAD\"\r\n                ? \"Your file has been downloaded.\"\r\n                : \"We have sent FY Statement  to your Email\"\r\n            }`,\r\n            \"success\"\r\n          );\r\n        }\r\n      });\r\n    }\r\n  });\r\n};\r\n\r\nexport const downloadClosedLoanStatementAlert = (type) => {\r\n  Swal.fire({\r\n    title: \"Are you sure?\",\r\n    text: `You want to download All  Closed Loan Information  `,\r\n    icon: \"info\",\r\n    showCancelButton: true,\r\n    confirmButtonColor: \"#3085d6\",\r\n    cancelButtonColor: \"#d33\",\r\n    confirmButtonText: \"Yes !\",\r\n  }).then((result) => {\r\n    if (result.isConfirmed) {\r\n      const response = downloadClosedLoanStatement(type);\r\n      response.then((data) => {\r\n        if (data.request.status == 200) {\r\n          window.open(data.data.closedDealsDownloadUrl, \"_blank\");\r\n          Swal.fire(\"Success!\", `Downloaded Successfully`, \"success\");\r\n        } else if (data.response.data.errorCode != \"200\") {\r\n          Swal.fire(\r\n            \"warning!\",\r\n            `${data.response.data.errorMessage}`,\r\n            \"warning\"\r\n          );\r\n        }\r\n      });\r\n    }\r\n  });\r\n};\r\n\r\nexport const downloadMytransactionAlert = () => {\r\n  Swal.fire({\r\n    title: \"Are you sure?\",\r\n    text: `You want to download Transaction Information  `,\r\n    icon: \"info\",\r\n    showCancelButton: true,\r\n    confirmButtonColor: \"#3085d6\",\r\n    cancelButtonColor: \"#d33\",\r\n    confirmButtonText: \"Yes !\",\r\n  }).then((result) => {\r\n    if (result.isConfirmed) {\r\n      const response = downloadTranactionStatement();\r\n      response.then((data) => {\r\n        if (data.request.status == 200) {\r\n          window.open(data.data.downloadUrl, \"_blank\");\r\n          Swal.fire(\"Success!\", `Downloaded Successfully`, \"success\");\r\n        } else if (data.response.data.errorCode != \"200\") {\r\n          Swal.fire(\r\n            \"warning!\",\r\n            `${data.response.data.errorMessage}`,\r\n            \"warning\"\r\n          );\r\n        }\r\n      });\r\n    }\r\n  });\r\n};\r\n\r\nexport const freeParticipationapialert = (\r\n  apidata,\r\n  groupId,\r\n  urldealId,\r\n  bank,\r\n  lenderReturnType,\r\n  deal\r\n) => {\r\n  Swal.fire({\r\n    title: \"Please review the lending details!\",\r\n    text: `Lending Amount: INR ${deal.participatedAmount}<br></br>Deal Name: ${deal.dealName}<br></br>RoI: ${deal}%`,\r\n    icon: \"info\",\r\n    showCancelButton: true,\r\n    confirmButtonColor: \"#3085d6\",\r\n    cancelButtonColor: \"#d33\",\r\n    confirmButtonText: \"Yes!\",\r\n  }).then((result) => {\r\n    if (result.isConfirmed) {\r\n      const response = nofreeParticipationapi(\r\n        apidata,\r\n        groupId,\r\n        urldealId,\r\n        bank,\r\n        lenderReturnType,\r\n        deal\r\n      );\r\n      response.then((data) => {\r\n        if (data.request.status == 200) {\r\n          toastrSuccess(\"Deal participated successfully\"); // Make sure toastrSuccess is defined\r\n        } else if (data.response.data.errorCode != \"200\") {\r\n          Swal.fire(\r\n            \"Warning!\",\r\n            `${data.response.data.errorMessage}`,\r\n            \"warning\"\r\n          );\r\n        }\r\n      });\r\n    }\r\n  });\r\n};\r\n\r\nexport const paypendingprocessingAmount = (dealaId, fee) => {\r\n  Swal.fire({\r\n    title: \"Are you sure?\",\r\n    text: `You want to pay the INR ${fee} processing fee Amount`,\r\n    icon: \"info\",\r\n    showCancelButton: true,\r\n    confirmButtonColor: \"#3085d6\",\r\n    cancelButtonColor: \"#d33\",\r\n    confirmButtonText: \"Yes !\",\r\n  }).then((result) => {\r\n    if (result.isConfirmed) {\r\n      const response = confirmthependingamount(dealaId, fee);\r\n      response.then((data) => {\r\n        if (data.request.status == 200) {\r\n          Swal.fire(\r\n            \"Success!\",\r\n            `Sucessfully Paid The Pending Amount`,\r\n            \"success\"\r\n          );\r\n\r\n          setTimeout(() => {\r\n            window.location.reload();\r\n          }, 5000);\r\n        } else if (data.response.data.errorCode != \"200\") {\r\n          Swal.fire(\r\n            \"warning!\",\r\n            `${data.response.data.errorMessage}`,\r\n            \"warning\"\r\n          );\r\n        }\r\n      });\r\n    }\r\n  });\r\n};\r\n\r\nexport const cancelwithdrawalRequestInformation = (fromrequest, id) => {\r\n  Swal.fire({\r\n    title: \"Are you sure?\",\r\n    text: `You want to Cancel The Withdrawal Request`,\r\n    icon: \"info\",\r\n    showCancelButton: true,\r\n    confirmButtonColor: \"#3085d6\",\r\n    cancelButtonColor: \"#d33\",\r\n    confirmButtonText: \"Yes !\",\r\n  }).then((result) => {\r\n    if (result.isConfirmed) {\r\n      const response = cancelWithdrawalRequest(fromrequest, id);\r\n      response.then((data) => {\r\n        if (data.request.status == 200) {\r\n          Swal.fire(\"Success!\", `Sucessfully Cancel The Request`, \"success\");\r\n        } else if (data.response.data.errorCode != \"200\") {\r\n          Swal.fire(\r\n            \"warning!\",\r\n            `${data.response.data.errorMessage}`,\r\n            \"warning\"\r\n          );\r\n        }\r\n      });\r\n    }\r\n  });\r\n};\r\n\r\nexport const cancelwithdrawalWalletToWallet = async (id) => {\r\n  console.log(id);\r\n  Swal.fire({\r\n    title: \"Are you sure?\",\r\n    text: `You want to Cancel The  Request`,\r\n    icon: \"info\",\r\n    showCancelButton: true,\r\n    confirmButtonColor: \"#3085d6\",\r\n    cancelButtonColor: \"#d33\",\r\n    confirmButtonText: \"Yes !\",\r\n  }).then((result) => {\r\n    if (result.isConfirmed) {\r\n      console.log(id);\r\n      const response = cancelMyWithdrawWalletRequest(id);\r\n      response.then((data) => {\r\n        if (\r\n          data == undefined ||\r\n          data.request.status == 200 ||\r\n          data.request.status == 204\r\n        ) {\r\n          Swal.fire(\"Success!\", `Sucessfully Cancel The Request`, \"success\");\r\n          setTimeout(() => {\r\n            window.location.reload();\r\n          }, 3000);\r\n        } else if (data.response.data.errorCode != \"200\") {\r\n          Swal.fire(\r\n            \"warning!\",\r\n            `${data.response.data.errorMessage}`,\r\n            \"warning\"\r\n          );\r\n        }\r\n      });\r\n    }\r\n  });\r\n};\r\n\r\nexport const Success = (tittle, message) => {\r\n  Swal.fire(`${tittle}`, `${message}`, \"success\");\r\n};\r\n\r\nexport const WarningBackendApi = (tittle, message) => {\r\n  Swal.fire(`${tittle}`, `${message}`, \"warning\");\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport alertify from \"alertifyjs\";\r\nimport \"../../../../node_modules/alertifyjs/build/css/alertify.css\";\r\nimport \"../../../../node_modules/alertifyjs/build/css/themes/semantic.css\";\r\n\r\nexport const toastrSuccess = (message, position = \"bottom-center\") => {\r\n  alertify.set(\"notifier\", \"position\", position);\r\n  alertify.success(message);\r\n};\r\nexport const toastrInfo = () => {\r\n  alertify.set(\"notifier\", \"position\", \"top-right\");\r\n  alertify.message(\"Have fun storming the castle!\");\r\n};\r\nexport const toastrWarning = (message) => {\r\n  alertify.set(\"notifier\", \"position\", \"top-right\");\r\n  alertify.error(message);\r\n};\r\nexport const topCenter1 = (messages) => {\r\n  alertify.set(\"notifier\", \"position\", \"top-center\");\r\n  alertify.message(messages);\r\n};\r\nexport const toastrError = (error) => {\r\n  alertify.set(\"notifier\", \"position\", \"top-right\");\r\n  alertify.error(error);\r\n};\r\nexport const topLeft = () => {\r\n  alertify.set(\"notifier\", \"position\", \"top-left\");\r\n  alertify.message(\"Top Left! Have fun storming\");\r\n};\r\nexport const topCenter = () => {\r\n  alertify.set(\"notifier\", \"position\", \"top-center\");\r\n  alertify.message(\"Top Center! Have fun storming\");\r\n};\r\nexport const topRight = () => {\r\n  alertify.set(\"notifier\", \"position\", \"top-right\");\r\n  alertify.message(\"Top Right! Have fun storming\");\r\n};\r\nexport const topFull = () => {\r\n  alertify.set(\"notifier\", \"position\", \"top-full\");\r\n  alertify.message(\"Top Full! Have fun storming\");\r\n};\r\nexport const bottomLeft = () => {\r\n  alertify.set(\"notifier\", \"position\", \"bottom-left\");\r\n  alertify.message(\"Bottom Left! Have fun storming\");\r\n};\r\nexport const bottomCenter = (message) => {\r\n  alertify.set(\"notifier\", \"position\", \"bottom-center\");\r\n  alertify.error(message);\r\n};\r\nexport const bottomRight = () => {\r\n  alertify.set(\"notifier\", \"position\", \"bottom-right\");\r\n  alertify.message(\"Bottom Right! Have fun storming\");\r\n};\r\nexport const bottomFull = () => {\r\n  alertify.set(\"notifier\", \"position\", \"bottom-full\");\r\n  alertify.message(\"Bottom Full! Have fun storming\");\r\n};\r\nexport const notifications = () => {\r\n  alertify.set(\"notifier\", \"position\", \"top-right\");\r\n  alertify.message(\"Notification! Have fun storming\");\r\n};\r\nexport const closeButton = () => {\r\n  alertify.set(\"notifier\", \"position\", \"top-right\");\r\n  alertify.success(\"Close Button! Have fun storming\");\r\n};\r\nexport const progessBar = () => {\r\n  var canDismiss = false;\r\n  var notification = alertify.success(\"You can dismiss this after Progessbar!\");\r\n  notification.ondismiss = function () {\r\n    return canDismiss;\r\n  };\r\n  setTimeout(function () {\r\n    canDismiss = true;\r\n  }, 3000);\r\n};\r\nexport const clearToast = () => {\r\n  alertify.message(\"Cleared\").dismissOthers();\r\n};\r\nconst show5 = () => {\r\n  var duration = 5;\r\n  alertify.set(\"notifier\", \"position\", \"top-right\");\r\n  var msg = alertify.message(\r\n    \"Auto-dismiss in \" + duration + \" seconds.\",\r\n    5,\r\n    function () {\r\n      clearInterval(interval);\r\n    }\r\n  );\r\n  var interval = setInterval(function () {\r\n    msg.setContent(\"Auto-dismiss in \" + --duration + \" seconds.\");\r\n  }, 1000);\r\n};\r\nexport const hide3 = () => {\r\n  var duration = 3;\r\n  alertify.set(\"notifier\", \"position\", \"top-right\");\r\n  var msg = alertify.message(\r\n    \"Auto-dismiss in \" + duration + \" seconds.\",\r\n    3,\r\n    function () {\r\n      clearInterval(interval);\r\n    }\r\n  );\r\n  var interval = setInterval(function () {\r\n    msg.setContent(\"Auto-dismiss in \" + --duration + \" seconds.\");\r\n  }, 1000);\r\n};\r\nexport const timeout5 = () => {\r\n  var duration = 5;\r\n  alertify.set(\"notifier\", \"position\", \"top-right\");\r\n  var msg = alertify.message(\r\n    \"Auto-dismiss in \" + duration + \" seconds.\",\r\n    5,\r\n    function () {\r\n      clearInterval(interval);\r\n    }\r\n  );\r\n  var interval = setInterval(function () {\r\n    msg.setContent(\"Auto-dismiss in \" + --duration + \" seconds.\");\r\n  }, 1000);\r\n};\r\nexport const sticky = () => {\r\n  var canDismiss = false;\r\n  var notification = alertify.success(\"Sticky Toaster have Fun\");\r\n  notification.ondismiss = function () {\r\n    return canDismiss;\r\n  };\r\n  setTimeout(function () {\r\n    canDismiss = true;\r\n  }, 100000);\r\n};\r\n"],"names":["HandleWithFooter","message","Swal","type","title","text","confirmButtonClass","buttonsStyling","Info","data","icon","confirmButtonText","cancelButtonText","showCloseButton","then","result","isConfirmed","submitWithdrawalRequestFromWallet","request","status","WarningAlertwithdrow","response","errorMessage","registersuccess","showConfirmButton","window","location","href","WarningAlert","redirectTo","showDenyButton","denyButtonText","denyButtonColor","concat","isDenied","getNewSessionTime","validityDatemodal","validityDate","groupName","html","showCancelButton","confirmButtonColor","cancelButtonColor","dismiss","localStorage","setItem","dealmembership","route","personalDetails","participatedapi","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee3","deal","payoutmethod","wrap","_context3","prev","next","getItem","participatedAmount","apidata","dealName","feeStatusToParticipate","dealparticipationValidityUser","newlenderdealparticipation","newLenderGstAndFeeCalculation","parseInt","_ref2","_callee","_context","feeapicallforonedeal","urldealId","stop","_x2","apply","arguments","console","log","errorCode","paymentErrormessage","match","_ref3","_callee2","_context2","paypendingprocessingAmount","_x3","lenderValidityStatus","membership","_x","_ref4","_callee4","dealId","dealInfo","amount","calculate","tenure","inputOptions","_yield$Swal$fire","choosenPayoutMethod","selectedOption","_context4","monthly","quarterly","halfyearly","peryear","lifetime","fiveyears","tenyears","PerDeal","Promise","resolve","setTimeout","width","input","inputValidator","value","sent","feeApicall","_x4","_x5","_x6","WarningAlertWalltTran","PrincipalTransfer","warningType","errormessage","reload","WarningAlerterror","membershipsweetalert","confirmationAlertFyYear","startdate","enddate","downloadType","getFinancialReportDownload","open","lenderProfit","downloadClosedLoanStatementAlert","downloadClosedLoanStatement","closedDealsDownloadUrl","downloadMytransactionAlert","downloadTranactionStatement","downloadUrl","dealaId","fee","confirmthependingamount","cancelwithdrawalRequestInformation","fromrequest","id","cancelWithdrawalRequest","cancelwithdrawalWalletToWallet","_ref5","_callee5","_context5","cancelMyWithdrawWalletRequest","undefined","_x7","Success","tittle","WarningBackendApi","toastrSuccess","position","length","alertify","toastrWarning","toastrError","error","bottomCenter"],"sourceRoot":""}