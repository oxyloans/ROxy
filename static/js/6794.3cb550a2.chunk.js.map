{"version":3,"file":"static/js/6794.3cb550a2.chunk.js","mappings":"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","sources":["components/pages/Authentication/PartnerRegister.jsx","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["import React, { useRef, useState } from \"react\";\r\nimport { login } from \"../../imagepath\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport FeatherIcon from \"feather-icons-react/build/FeatherIcon\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst PartnerRegister = () => {\r\n  let inputRef = useRef();\r\n  let inputRef2 = useRef();\r\n  const showIcon = () => (\r\n    <i class=\"feather feather-eye\" aria-hidden=\"true\">\r\n      <FeatherIcon icon=\"eye\" />\r\n    </i>\r\n  );\r\n  const hideIcon = () => (\r\n    <i class=\"feather feather-eye-slash\" aria-hidden=\"true\">\r\n      <FeatherIcon icon=\"eye-off\" />\r\n    </i>\r\n  );\r\n  const [field, setfield] = useState(true);\r\n  const [data, setdata] = useState({\r\n    partnername: \"\",\r\n    partneremail: \"\",\r\n    phonenumber: \"\",\r\n    smobilenumber: \"\",\r\n    sname: \"\",\r\n    semail: \"\",\r\n    error: \"\",\r\n    partnernameerror: \"\",\r\n    partneremailerror: \"\",\r\n    phonenumbererror: \"\",\r\n    smobilenumbererror: \"\",\r\n    snameerror: \"\",\r\n    semailerror: \"\",\r\n  });\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const reduxStoreData = useSelector((data) => data.counter.userProfile);\r\n  const handlechange = (event) => {\r\n    const { name, value } = event.target;\r\n    setdata({\r\n      ...data,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const submitformone = () => {\r\n    const errors = {};\r\n\r\n    if (data.partnername === \"\") {\r\n      errors.partnernameerror = \"Please enter The Partner Name\";\r\n    }\r\n    if (data.partneremail === \"\") {\r\n      errors.partneremailerror = \"Please enter The Partner email\";\r\n    }\r\n    if (data.phonenumber === \"\") {\r\n      errors.phonenumbererror = \"Please enter The Partner number\";\r\n    }\r\n\r\n    // Update the state with all the error messages at once\r\n    setdata({\r\n      ...data,\r\n      ...errors,\r\n    });\r\n  };\r\n  const handlesubmit1 = () => {\r\n    const errors = {};\r\n\r\n    if (data.smobilenumber === \"\") {\r\n      errors.smobilenumbererror = \"Please enter The Partner number\";\r\n    }\r\n    if (data.partneremail === \"\") {\r\n      errors.semailerror = \"Please enter The Partner email\";\r\n    }\r\n    if (data.sname === \"\") {\r\n      errors.snameerror = \"Please enter The Partner name\";\r\n    }\r\n\r\n    // Update the state with all the error messages at once\r\n    setdata({\r\n      ...data,\r\n      ...errors,\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      {/* Main Wrapper */}\r\n      <div className=\"main-wrapper login-body\">\r\n        <div className=\"login-wrapper\">\r\n          <div className=\"container\">\r\n            <div className=\"loginbox\">\r\n              <div className=\"login-left\">\r\n                <img className=\"img-fluid\" src={login} alt=\"Logo\" />\r\n              </div>\r\n              <div className=\"login-right\">\r\n                <div className=\"login-right-wrap\">\r\n                  <h1 style={{ marginBottom: \"1rem\" }}>\r\n                    Register as a Partner\r\n                  </h1>\r\n\r\n                  {/* Form */}\r\n                  {/* <form action=\"./login\"> */}\r\n                  {field ? (\r\n                    <>\r\n                      <div className=\"form-group\">\r\n                        <label>\r\n                          Partner Name <span className=\"login-danger\">*</span>\r\n                        </label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text \"\r\n                          name=\"partnername\"\r\n                          onChange={handlechange}\r\n                        />\r\n                        <span className=\"profile-views\">\r\n                          <i className=\"fas fa-user-circle\" />\r\n                        </span>\r\n                        {data.partnernameerror && (\r\n                          <div className=\"error\">{data.partnernameerror}</div>\r\n                        )}\r\n                      </div>\r\n\r\n                      <div className=\"form-group\">\r\n                        <label>\r\n                          Partner Email <span className=\"login-danger\">*</span>\r\n                        </label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"partneremail\"\r\n                          onChange={handlechange}\r\n                        />\r\n                        <span className=\"profile-views\">\r\n                          <i className=\"fas fa-envelope\" />\r\n                        </span>{\" \"}\r\n                        {data.partneremailerror && (\r\n                          <div className=\"error\">{data.partneremailerror}</div>\r\n                        )}\r\n                      </div>\r\n\r\n                      <div className=\"form-group\">\r\n                        <label>\r\n                          Phone number <span className=\"login-danger\">*</span>\r\n                        </label>\r\n                        <input\r\n                          ref={inputRef}\r\n                          className=\"form-control pass-input\"\r\n                          name=\"phonenumber\"\r\n                          type=\"password\"\r\n                          onChange={handlechange}\r\n                        />\r\n                        <span className=\"profile-views\">\r\n                          <i className=\"fas fa-phone\" />\r\n                        </span>\r\n                        {/* <input className=\"form-control pass-input\" type=\"text\" />\r\n                                            <span className=\"profile-views feather-eye toggle-password\">\r\n                                                <FeatherIcon icon=\"eye\" />\r\n                                            </span> */}\r\n                        {data.phonenumbererror && (\r\n                          <div className=\"error\">{data.phonenumbererror}</div>\r\n                        )}\r\n                      </div>\r\n\r\n                      <div className=\" dont-have\">\r\n                        Already Registered? <Link to=\"/login\">Login</Link>\r\n                      </div>\r\n                      <div className=\"form-group mb-0\">\r\n                        <button\r\n                          className=\"btn btn-primary btn-block\"\r\n                          type=\"submit\"\r\n                          onClick={submitformone}\r\n                        >\r\n                          Next Step\r\n                        </button>\r\n                      </div>\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      {\" \"}\r\n                      <div className=\"form-group\">\r\n                        <label>\r\n                          SPOC Mobile number\r\n                          <span className=\"login-danger\">*</span>\r\n                        </label>\r\n                        {/* <input className=\"form-control pass-confirm\" type=\"text\" /> */}\r\n                        <input\r\n                          ref={inputRef2}\r\n                          className=\"form-control pass-confirm\"\r\n                          type=\"number\"\r\n                          name=\"smobilenumber\"\r\n                          onChange={handlechange}\r\n                        />\r\n\r\n                        <span className=\"profile-views\">\r\n                          <i className=\"fas fa-phone\" />\r\n                        </span>\r\n                        {data.smobilenumbererror && (\r\n                          <div className=\"error\">{data.smobilenumbererror}</div>\r\n                        )}\r\n                      </div>\r\n                      <p style={{ fontSize: \"12px\" }}>\r\n                        {\" \"}\r\n                        SPOC (Single Point of Contact)\r\n                      </p>\r\n                      <div className=\"form-group\">\r\n                        <label>\r\n                          SPOC Name<span className=\"login-danger\">*</span>\r\n                        </label>\r\n                        {/* <input className=\"form-control pass-confirm\" type=\"text\" /> */}\r\n                        <input\r\n                          ref={inputRef2}\r\n                          className=\"form-control pass-confirm\"\r\n                          type=\"number\"\r\n                          name=\"sname\"\r\n                          onChange={handlechange}\r\n                        />\r\n                        <span className=\"profile-views\">\r\n                          <i className=\"fas fa-user-circle\" />\r\n                        </span>{\" \"}\r\n                        {data.snameerror && (\r\n                          <div className=\"error\">{data.snameerror}</div>\r\n                        )}\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                        <label>\r\n                          SPOC Email<span className=\"login-danger\">*</span>\r\n                        </label>\r\n                        {/* <input className=\"form-control pass-confirm\" type=\"text\" /> */}\r\n                        <input\r\n                          ref={inputRef2}\r\n                          className=\"form-control pass-confirm\"\r\n                          type=\"number\"\r\n                          name=\"semail\"\r\n                          onChange={handlechange}\r\n                        />\r\n                        <span className=\"profile-views\">\r\n                          <i className=\"fas fa-envelope\" />\r\n                        </span>{\" \"}\r\n                        {data.semailerror && (\r\n                          <div className=\"error\">{data.semailerror}</div>\r\n                        )}\r\n                      </div>\r\n                      {/* <div className=\" dont-have\">\r\n                      Already Registered? <Link to=\"/login\">Login</Link>\r\n                    </div> */}\r\n                      <div className=\"form-group mb-0\">\r\n                        <button\r\n                          className=\"btn btn-primary btn-block\"\r\n                          type=\"submit\"\r\n                          onClick={handlesubmit1}\r\n                        >\r\n                          Submit\r\n                        </button>\r\n                      </div>\r\n                    </>\r\n                  )}\r\n\r\n                  {/* </form> */}\r\n                  {/* /Form */}\r\n                  <div className=\"login-or\">\r\n                    <span className=\"or-line\" />\r\n                    <span className=\"span-or\">or</span>\r\n                  </div>\r\n                  {/* Social Login */}\r\n                  <div className=\"social-login\">\r\n                    <Link to=\"#\">\r\n                      <i className=\"fab fa-google-plus-g\" />\r\n                    </Link>\r\n                    <Link to=\"#\">\r\n                      <i className=\"fab fa-facebook-f\" />\r\n                    </Link>\r\n                    <Link to=\"#\">\r\n                      <i className=\"fab fa-twitter\" />\r\n                    </Link>\r\n                    <Link to=\"#\">\r\n                      <i className=\"fab fa-linkedin-in\" />\r\n                    </Link>\r\n                  </div>\r\n                  {/* /Social Login */}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PartnerRegister;\r\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["inputRef","useRef","inputRef2","_useState","useState","_useState2","_slicedToArray","field","_useState3","partnername","partneremail","phonenumber","smobilenumber","sname","semail","error","partnernameerror","partneremailerror","phonenumbererror","smobilenumbererror","snameerror","semailerror","_useState4","data","setdata","handlechange","useDispatch","useSelector","counter","userProfile","event","_event$target","target","name","value","_objectSpread","_defineProperty","_jsx","_Fragment","children","className","_jsxs","src","login","alt","style","marginBottom","type","onChange","ref","Link","to","onClick","errors","fontSize","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","location","propFullName","secret","err","Error","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes"],"sourceRoot":""}