{"version":3,"file":"static/js/2867.c30e6b81.chunk.js","mappings":"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","sources":["components/HttpRequest/beforelogin.js","components/pages/Authentication/ForgotPassword.jsx"],"sourcesContent":["import axios from \"axios\";\r\nconst userisIn = \"prod\";\r\nlet API_BASE_URL =\r\n  userisIn == \"local\"\r\n    ? \"http://ec2-15-207-239-145.ap-south-1.compute.amazonaws.com:8080/oxyloans/v1/user/\"\r\n    : \"https://fintech.oxyloans.com/oxyloans/v1/user/\";\r\n\r\nconst handleApiRequestBeforeLogin = async (\r\n  method,\r\n  BASE_URL,\r\n  End_Url,\r\n  POSTDATA\r\n) => {\r\n  try {\r\n    const response = await axios({\r\n      method,\r\n      url: `${BASE_URL}${End_Url}`,\r\n      data: POSTDATA,\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n\r\n    if (response.status == 200) {\r\n      return response;\r\n    }\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const sendotpemail = async (email) => {\r\n  const data = {\r\n    email: email,\r\n  };\r\n\r\n  const response = handleApiRequestBeforeLogin(\r\n    \"POST\",\r\n    API_BASE_URL,\r\n    \"resetpassword\",\r\n    data\r\n  );\r\n  return response;\r\n};\r\n\r\nexport const Admlog = async (userid, password) => {\r\n  const data = {\r\n    id: userid,\r\n    primaryType: password,\r\n  };\r\n  const response = await handleApiRequestBeforeLogin(\r\n    \"POST\",\r\n    API_BASE_URL,\r\n    \"login?grantType=PWD\",\r\n    data\r\n  );\r\n\r\n  if (response.status == 200) {\r\n    const accessTokenFromHeader = response.headers[\"accesstoken\"];\r\n    sessionStorage.setItem(\"accessToken\", accessTokenFromHeader);\r\n    sessionStorage.setItem(\"userId\", response.data.id);\r\n    sessionStorage.setItem(\"tokenTime\", response.data.tokenGeneratedTime);\r\n    return response;\r\n  } else {\r\n    return response;\r\n  }\r\n};\r\nexport const userloginSection = async (email, password) => {\r\n  const checkLoginMode = email.includes(\"@\") == true ? true : false;\r\n  const postdata =\r\n    checkLoginMode === true\r\n      ? JSON.stringify({ password: password, email: email })\r\n      : JSON.stringify({\r\n          password: password,\r\n          mobileNumber: email,\r\n        });\r\n\r\n  const response = await handleApiRequestBeforeLogin(\r\n    \"POST\",\r\n    API_BASE_URL,\r\n    \"login?grantType=PWD\",\r\n    postdata\r\n  );\r\n\r\n  if (response.status == 200) {\r\n    const accessTokenFromHeader = response.headers[\"accesstoken\"];\r\n    sessionStorage.setItem(\"accessToken\", accessTokenFromHeader);\r\n    sessionStorage.setItem(\"userId\", response.data.id);\r\n    sessionStorage.setItem(\"tokenTime\", response.data.tokenGeneratedTime);\r\n    return response;\r\n  } else {\r\n    return response;\r\n  }\r\n};\r\nexport const sendwhatappotp = async (value1) => {\r\n  const value = value1.replace(\"+\", \"\");\r\n  const data = {\r\n    whatsappNumber: value,\r\n  };\r\n  const response = await handleApiRequestBeforeLogin(\r\n    \"POST\",\r\n    API_BASE_URL,\r\n    \"whatsapp-login-otp\",\r\n    data\r\n  );\r\n  return response;\r\n};\r\nexport const referrerdata = (referrerId, refParam) => {\r\n  console.log(referrerId);\r\n\r\n  const numericPart = referrerId.match(/\\d+$/);\r\n\r\n  if (referrerId !== \"\") {\r\n    const response = handleApiRequestBeforeLogin(\r\n      \"GET\",\r\n      API_BASE_URL,\r\n\r\n      `${numericPart}/user-uniquenumber`\r\n    );\r\n    return response;\r\n  } else {\r\n    const response = handleApiRequestBeforeLogin(\r\n      \"GET\",\r\n      API_BASE_URL,\r\n\r\n      `${refParam}/user-uniquenumber`\r\n    );\r\n\r\n    return response;\r\n  }\r\n};\r\n\r\nexport const handlesenOtp = async (moblie) => {\r\n  var data = {\r\n    mobileNumber: moblie,\r\n  };\r\n\r\n  const response = await handleApiRequestBeforeLogin(\r\n    \"POST\",\r\n    API_BASE_URL,\r\n    `sendOtp`,\r\n    data\r\n  );\r\n  return response;\r\n};\r\n\r\nexport const usersubmitotp = async (email, password) => {\r\n  const data = {\r\n    mobileNumber: email,\r\n    mobileOtpValue: password,\r\n  };\r\n  const response = await handleApiRequestBeforeLogin(\r\n    \"POST\",\r\n    API_BASE_URL,\r\n    `login?grantType=PWD `,\r\n    data\r\n  );\r\n\r\n  return response;\r\n};\r\n\r\nexport const verifywhatappotp = async (api) => {\r\n  console.log(api);\r\n  const value1 = localStorage.getItem(\"otp\");\r\n  const otp = value1.replace(/,/g, \"\");\r\n  const data = {\r\n    whatsappNumber: api.whatsappNumber,\r\n    session: api.session,\r\n    otp: otp,\r\n    id: api.id,\r\n    otpGeneratedTime: api.otpGeneratedTime,\r\n  };\r\n  const response = await handleApiRequestBeforeLogin(\r\n    \"POST\",\r\n    API_BASE_URL,\r\n    \"whatsapp-login-otp-verification\",\r\n    data\r\n  );\r\n  return response;\r\n};\r\n\r\n// export const handleip4 = () => {\r\n//   return handleApiRequestBeforeLogin(\r\n//     \"get\",\r\n//     \"https://api.ipify.org/?format=json\"\r\n//   );\r\n// };\r\n// export const handleipv6 = () => {\r\n//   return handleApiRequestBeforeLogin(\"get\", \"https://ipapi.co/json/\");\r\n// };\r\n\r\nexport const passwordupdated = async (\r\n  email,\r\n  emailToken,\r\n  password,\r\n  confirmPassword\r\n) => {\r\n  const data = {\r\n    password: password,\r\n    confirmPassword: confirmPassword,\r\n  };\r\n  const response = handleApiRequestBeforeLogin(\r\n    \"POST\",\r\n    API_BASE_URL,\r\n    `resetpassword/${emailToken}`,\r\n    data\r\n  );\r\n  return response;\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { registerImage } from \"../../imagepath\";\r\n\r\nimport { passwordupdated } from \"../../HttpRequest/beforelogin\";\r\n\r\nconst ForgotPassword = () => {\r\n  const [email, setemail] = useState({\r\n    emailid: \"\",\r\n    error: \"\",\r\n    data: {},\r\n    emailvaild: false,\r\n    emailToken: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    passworderror: \"\",\r\n    confirmpassword: \"\",\r\n  });\r\n  const [emailisvaild, setemailisvaild] = useState(true);\r\n  const handlechange = (event) => {\r\n    const { name, value } = event.target; // Correct the typo: event.target instead of event.traget\r\n    setemail({\r\n      ...email,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const urlemail = new URLSearchParams(window.location.search);\r\n    const email = urlemail.get(\"email\");\r\n    console.log(email);\r\n    const emailToken = urlemail.get(\"emailToken\");\r\n    console.log(emailToken);\r\n\r\n    setemail({\r\n      ...email,\r\n      email: email,\r\n      emailToken: emailToken,\r\n    });\r\n  }, [emailisvaild]);\r\n\r\n  const handlepassword = async () => {\r\n    if (email.password !== email.confirmpassword) {\r\n      setemail({\r\n        ...email,\r\n        passworderror: \"password and confirm password must be the same\",\r\n      });\r\n    } else {\r\n      try {\r\n        const response = await passwordupdated(\r\n          email.emailToken,\r\n          email.email,\r\n          email.password,\r\n          email.confirmpassword\r\n        );\r\n\r\n        console.log(response);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* Main Wrapper */}\r\n      <div className=\"main-wrapper login-body\">\r\n        <div className=\"login-wrapper\">\r\n          <div className=\"container\">\r\n            <div className=\"loginbox\">\r\n              <div className=\"login-left\">\r\n                <img\r\n                  className=\"img-fluid  h-100\"\r\n                  src={registerImage}\r\n                  alt=\"Logo\"\r\n                />\r\n              </div>\r\n              <div className=\"login-right\">\r\n                <div className=\"login-right-wrap\">\r\n                  {/* Form */}\r\n                  {/* <form action=\"./login\"> */}\r\n\r\n                  <div>\r\n                    {\" \"}\r\n                    <h1>Reset Password</h1>\r\n                    <p className=\"account-subtitle\">Let Us Help You</p>\r\n                    {/* Form */}\r\n                    {/* <form action=\"./login\"> */}\r\n                    <div className=\"form-group\">\r\n                      <label>\r\n                        email address <span className=\"login-danger\">*</span>\r\n                      </label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        name=\"emailid\"\r\n                        value={email.email}\r\n                      />\r\n                      <span className=\"profile-views\">\r\n                        <i className=\"fas fa-envelope\" />\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <label>\r\n                        password <span className=\"login-danger\">*</span>\r\n                      </label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        name=\"emailid\"\r\n                        onChange={handlechange}\r\n                      />\r\n                      <span className=\"profile-views\">\r\n                        <i className=\"fas fa-envelope\" />\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <label>\r\n                        confirm password <span className=\"login-danger\">*</span>\r\n                      </label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        name=\"emailid\"\r\n                        onChange={handlechange}\r\n                      />\r\n                      <span className=\"profile-views\">\r\n                        <i className=\"fas fa-envelope\" />\r\n                      </span>\r\n                    </div>\r\n                    {email.error && (\r\n                      <div className=\"errormessage\">{email.error}</div>\r\n                    )}\r\n                    {email.passworderror && (\r\n                      <div className=\"errormessage\">{email.passworderror}</div>\r\n                    )}\r\n                    <div className=\"form-group\">\r\n                      <button\r\n                        className=\"btn btn-primary btn-block\"\r\n                        type=\"submit\"\r\n                        onClick={handlepassword}\r\n                      >\r\n                        Reset My Password\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/* </form> */}\r\n                  {/* /Form */}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ForgotPassword;\r\n"],"names":["API_BASE_URL","handleApiRequestBeforeLogin","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","method","BASE_URL","End_Url","POSTDATA","response","wrap","_context","prev","next","axios","url","concat","data","headers","sent","status","abrupt","t0","stop","_x","_x2","_x3","_x4","apply","arguments","sendotpemail","_ref2","_callee2","email","_context2","_x5","Admlog","_ref3","_callee3","userid","password","accessTokenFromHeader","_context3","id","primaryType","sessionStorage","setItem","tokenGeneratedTime","_x6","_x7","userloginSection","_ref4","_callee4","checkLoginMode","postdata","_context4","includes","JSON","stringify","mobileNumber","_x8","_x9","sendwhatappotp","_ref5","_callee5","value1","value","_context5","replace","whatsappNumber","_x10","handlesenOtp","_ref6","_callee6","moblie","_context6","_x11","usersubmitotp","_ref7","_callee7","_context7","mobileOtpValue","_x12","_x13","verifywhatappotp","_ref8","_callee8","api","otp","_context8","console","log","localStorage","getItem","session","otpGeneratedTime","_x14","passwordupdated","_ref9","_callee9","emailToken","confirmPassword","_context9","_x15","_x16","_x17","_x18","_useState","useState","emailid","error","emailvaild","passworderror","confirmpassword","_useState2","_slicedToArray","setemail","_useState3","_useState4","emailisvaild","handlechange","event","_event$target","target","name","_objectSpread","_defineProperty","useEffect","urlemail","URLSearchParams","window","location","search","get","handlepassword","_jsx","_Fragment","children","className","_jsxs","src","registerImage","alt","type","onChange","onClick"],"sourceRoot":""}