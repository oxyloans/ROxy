{"version":3,"file":"static/js/5690.7c2b427c.chunk.js","mappings":"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","sources":["components/HttpRequest/beforelogin.js","components/pages/Authentication/ForgotPassword3.jsx","components/pages/Authentication/api.js"],"sourcesContent":["import axios from \"axios\";\r\nconst userisIn = \"prod\";\r\nlet API_BASE_URL =\r\n  userisIn == \"local\"\r\n    ? \"http://ec2-15-207-239-145.ap-south-1.compute.amazonaws.com:8080/oxyloans/v1/user/\"\r\n    : \"https://fintech.oxyloans.com/oxyloans/v1/user/\";\r\n\r\nconst handleApiRequestBeforeLogin = async (\r\n  method,\r\n  BASE_URL,\r\n  End_Url,\r\n  POSTDATA\r\n) => {\r\n  try {\r\n    const response = await axios({\r\n      method,\r\n      url: `${BASE_URL}${End_Url}`,\r\n      data: POSTDATA,\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n\r\n    if (response.status == 200) {\r\n      return response;\r\n    }\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const sendotpemail = async (email) => {\r\n  const data = {\r\n    email: email,\r\n  };\r\n\r\n  const response = handleApiRequestBeforeLogin(\r\n    \"POST\",\r\n    API_BASE_URL,\r\n    \"resetpassword\",\r\n    data\r\n  );\r\n  return response;\r\n};\r\n\r\nexport const Admlog = async (userid, password) => {\r\n  const data = {\r\n    id: userid,\r\n    primaryType: password,\r\n  };\r\n  const response = await handleApiRequestBeforeLogin(\r\n    \"POST\",\r\n    API_BASE_URL,\r\n    \"login?grantType=PWD\",\r\n    data\r\n  );\r\n\r\n  if (response.status == 200) {\r\n    const accessTokenFromHeader = response.headers[\"accesstoken\"];\r\n    sessionStorage.setItem(\"accessToken\", accessTokenFromHeader);\r\n    sessionStorage.setItem(\"userId\", response.data.id);\r\n    sessionStorage.setItem(\"tokenTime\", response.data.tokenGeneratedTime);\r\n    return response;\r\n  } else {\r\n    return response;\r\n  }\r\n};\r\nexport const userloginSection = async (email, password) => {\r\n  const checkLoginMode = email.includes(\"@\") == true ? true : false;\r\n  const postdata =\r\n    checkLoginMode === true\r\n      ? JSON.stringify({ password: password, email: email })\r\n      : JSON.stringify({\r\n          password: password,\r\n          mobileNumber: email,\r\n        });\r\n\r\n  const response = await handleApiRequestBeforeLogin(\r\n    \"POST\",\r\n    API_BASE_URL,\r\n    \"login?grantType=PWD\",\r\n    postdata\r\n  );\r\n\r\n  if (response.status == 200) {\r\n    const accessTokenFromHeader = response.headers[\"accesstoken\"];\r\n    sessionStorage.setItem(\"accessToken\", accessTokenFromHeader);\r\n    sessionStorage.setItem(\"userId\", response.data.id);\r\n    sessionStorage.setItem(\"tokenTime\", response.data.tokenGeneratedTime);\r\n    return response;\r\n  } else {\r\n    return response;\r\n  }\r\n};\r\nexport const sendwhatappotp = async (value1) => {\r\n  const value = value1.replace(\"+\", \"\");\r\n  const data = {\r\n    whatsappNumber: value,\r\n  };\r\n  const response = await handleApiRequestBeforeLogin(\r\n    \"POST\",\r\n    API_BASE_URL,\r\n    \"whatsapp-login-otp\",\r\n    data\r\n  );\r\n  return response;\r\n};\r\nexport const referrerdata = (referrerId, refParam) => {\r\n  const numericPart = referrerId.match(/\\d+$/);\r\n\r\n  if (referrerId !== \"\") {\r\n    const response = handleApiRequestBeforeLogin(\r\n      \"GET\",\r\n      API_BASE_URL,\r\n\r\n      `${numericPart}/user-uniquenumber`\r\n    );\r\n    return response;\r\n  } else {\r\n    const response = handleApiRequestBeforeLogin(\r\n      \"GET\",\r\n      API_BASE_URL,\r\n\r\n      `${refParam}/user-uniquenumber`\r\n    );\r\n\r\n    return response;\r\n  }\r\n};\r\n\r\nexport const handlesenOtp = async (moblie) => {\r\n  var data = {\r\n    mobileNumber: moblie,\r\n  };\r\n\r\n  const response = await handleApiRequestBeforeLogin(\r\n    \"POST\",\r\n    API_BASE_URL,\r\n    `sendOtp`,\r\n    data\r\n  );\r\n  return response;\r\n};\r\n\r\nexport const usersubmitotp = async (email, password) => {\r\n  const data = {\r\n    mobileNumber: email,\r\n    mobileOtpValue: password,\r\n  };\r\n  const response = await handleApiRequestBeforeLogin(\r\n    \"POST\",\r\n    API_BASE_URL,\r\n    `login?grantType=PWD `,\r\n    data\r\n  );\r\n\r\n  return response;\r\n};\r\n\r\nexport const verifywhatappotp = async (api) => {\r\n  const value1 = localStorage.getItem(\"otp\");\r\n  const otp = value1.replace(/,/g, \"\");\r\n  const data = {\r\n    whatsappNumber: api.whatsappNumber,\r\n    session: api.session,\r\n    otp: otp,\r\n    id: api.id,\r\n    otpGeneratedTime: api.otpGeneratedTime,\r\n  };\r\n  const response = await handleApiRequestBeforeLogin(\r\n    \"POST\",\r\n    API_BASE_URL,\r\n    \"whatsapp-login-otp-verification\",\r\n    data\r\n  );\r\n  return response;\r\n};\r\n\r\n// export const handleip4 = () => {\r\n//   return handleApiRequestBeforeLogin(\r\n//     \"get\",\r\n//     \"https://api.ipify.org/?format=json\"\r\n//   );\r\n// };\r\n// export const handleipv6 = () => {\r\n//   return handleApiRequestBeforeLogin(\"get\", \"https://ipapi.co/json/\");\r\n// };\r\n\r\nexport const passwordupdated = async (\r\n  email,\r\n  emailToken,\r\n  password,\r\n  confirmPassword\r\n) => {\r\n  const data = {\r\n    password: password,\r\n    confirmPassword: confirmPassword,\r\n  };\r\n  const response = handleApiRequestBeforeLogin(\r\n    \"POST\",\r\n    API_BASE_URL,\r\n    `resetpassword/${emailToken}`,\r\n    data\r\n  );\r\n  return response;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { login } from \"../../imagepath\";\r\nimport * as api from \"./api\";\r\nimport { sendotpemail } from \"../../HttpRequest/beforelogin\";\r\nimport { toastrError, toastrSuccess } from \"../Base UI Elements/Toast\";\r\n\r\nconst ForgotPassword3 = () => {\r\n  const [email, setEmail] = useState({\r\n    emailid: \"\",\r\n    error: \"\",\r\n    data: {},\r\n  });\r\n\r\n  const handlechange = (event) => {\r\n    const { name, value } = event.target;\r\n    setEmail({\r\n      ...email,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleresetpassword = async () => {\r\n    const vaildatebu = api.vaildateemail(email.emailid);\r\n    if (vaildatebu) {\r\n      setEmail({\r\n        ...email,\r\n        error: vaildatebu,\r\n      });\r\n      return;\r\n    }\r\n    try {\r\n      const sendOtpEmail = await sendotpemail(email.emailid);\r\n\r\n      // setemailisvaild(!emailisvaild);\r\n\r\n      if (sendOtpEmail.status === 200) {\r\n        setEmail({\r\n          ...email,\r\n          data: sendOtpEmail,\r\n        });\r\n        toastrSuccess(\"We've sent an email to reset the password.\");\r\n      } else {\r\n        toastrError(\"error\");\r\n      }\r\n    } catch (error) {\r\n      setEmail({\r\n        ...email,\r\n        error: error,\r\n      });\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"main-wrapper login-body\">\r\n        <div className=\"login-wrapper\">\r\n          <div className=\"container\">\r\n            <div className=\"loginbox\">\r\n              <div className=\"login-left\">\r\n                <img className=\"img-fluid\" src={login} alt=\"Logo\" />\r\n              </div>\r\n              <div className=\"login-right\">\r\n                <div className=\"login-right-wrap\">\r\n                  <h1>Reset Password</h1>\r\n                  <p className=\"account-subtitle\">Let Us Help You</p>\r\n\r\n                  <div className=\"form-group\">\r\n                    <label>\r\n                      Enter your registered email address\r\n                      <span className=\"login-danger\">*</span>\r\n                    </label>\r\n                    <input\r\n                      className=\"form-control\"\r\n                      type=\"text\"\r\n                      name=\"emailid\"\r\n                      onChange={handlechange}\r\n                    />\r\n                    <span className=\"profile-views\">\r\n                      <i className=\"fas fa-envelope\" />\r\n                    </span>\r\n                  </div>\r\n                  {email.error && (\r\n                    <div className=\"text-danger\">{email.error}</div>\r\n                  )}\r\n                  <div className=\"form-group\">\r\n                    <button\r\n                      className=\"btn btn-primary btn-block\"\r\n                      type=\"submit\"\r\n                      onClick={handleresetpassword}\r\n                    >\r\n                      Reset My Password\r\n                    </button>\r\n                  </div>\r\n                  <div className=\"form-group mb-0\">\r\n                    {/* <button\r\n                      className=\"btn btn-primary primary-reset btn-block\"\r\n                      type=\"submit\"\r\n                      onClick=\"./admindashboard\"\r\n                    >\r\n                      Login\r\n                    </button> */}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ForgotPassword3;\r\n","import axios from \"axios\";\r\n\r\nconst userisIn = \"prod\";\r\nconst API_BASE_URL =\r\n  userisIn == \"local\"\r\n    ? \"http://ec2-15-207-239-145.ap-south-1.compute.amazonaws.com:8080/oxyloans/v1/user/\"\r\n    : \"https://fintech.oxyloans.com/oxyloans/v1/user\";\r\n\r\nconst API_URL =\r\n  \"http://ec2-15-207-239-145.ap-south-1.compute.amazonaws.com:8080/oxyloans/v1/user/login?grantType=PWD\";\r\nconst API_URL_otp =\r\n  \"http://ec2-15-207-239-145.ap-south-1.compute.amazonaws.com:8080/oxyloans/v1/user/sendOtp\";\r\n// Function to perform the login API request\r\nexport const loginUser = async (email, password, dataIpv4, dataIpv6) => {\r\n  var data = {\r\n    password: password,\r\n    email: email,\r\n    ipAddress: dataIpv4,\r\n    ipAddressResponse: dataIpv6,\r\n    loginType: \"WEB\",\r\n  };\r\n  try {\r\n    const response = await axios.post(API_URL, data, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n    const accessTokenFromHeader = response.headers[\"accesstoken\"];\r\n    localStorage.setItem(\"token\", accessTokenFromHeader);\r\n\r\n    if (!accessTokenFromHeader) {\r\n      throw new Error(\"Access token not found in response headers\");\r\n    }\r\n\r\n    return {\r\n      accessToken: accessTokenFromHeader,\r\n      responseData: response.data,\r\n    };\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const validateInput = (email, password) => {\r\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n  if (!email || !email.match(emailRegex)) {\r\n    return \"Please enter a valid email address\";\r\n  }\r\n\r\n  if (!password || password.length < 6) {\r\n    return \"Password must be at least 6 characters long\";\r\n  }\r\n  return null;\r\n};\r\n\r\nexport const sendotpemail = async (email) => {\r\n  var data = {\r\n    email: email,\r\n  };\r\n  try {\r\n    const response = await axios.post(API_BASE_URL + \"/resetpassword\", data, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n\r\n    return {\r\n      responseData: response.data,\r\n    };\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const verifypannumber = async (pannumber, address, time, id, date) => {\r\n  var data = {\r\n    address: address,\r\n    dob: date,\r\n    panNumber: pannumber,\r\n    timeInMilliSeconds: time,\r\n    emailOtp: null,\r\n    emailOtpSession: null,\r\n    userId: id,\r\n  };\r\n  try {\r\n    const response = await axios.patch(\r\n      API_BASE_URL + \"/emailVerification\",\r\n      data,\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n\r\n    return {\r\n      responseData: response.data,\r\n    };\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const vaildateemail = (email) => {\r\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n  if (!email || !email.match(emailRegex)) {\r\n    return \"Please enter a valid email address\";\r\n  }\r\n  return null;\r\n};\r\nexport const validateRegisterInput = (email, password, moblie) => {\r\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n  if (!email || !email.match(emailRegex)) {\r\n    return \"Please enter a valid email address\";\r\n  }\r\n\r\n  if (!password || password.length < 6) {\r\n    return \"Password must be at least 6 characters long\";\r\n  }\r\n\r\n  const phoneNumberRegex = /^\\d{10}$/;\r\n  if (!moblie || !moblie.match(phoneNumberRegex)) {\r\n    return \"Please enter a valid 10-digit phone number\";\r\n  }\r\n\r\n  return null; // No validation error\r\n};\r\n\r\nexport const validatemoblie = (moblie) => {\r\n  const phoneNumberRegex = /^\\d{10}$/;\r\n  if (!moblie || !moblie.match(phoneNumberRegex)) {\r\n    return \"Please enter a valid 10-digit phone number\";\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const moblieloginotp = async (moblie) => {\r\n  var data = {\r\n    mobileNumber: moblie,\r\n  };\r\n  try {\r\n    const response = await axios.post(API_URL_otp, data);\r\n    return {\r\n      responseData: response.data,\r\n    };\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const validateotpsubmit = async (moblie, otp) => {\r\n  var data = {\r\n    mobileNumber: moblie,\r\n    mobileOtpValue: otp,\r\n  };\r\n  try {\r\n    const response = await axios.post(\r\n      API_BASE_URL + \"/login?grantType=PWD\",\r\n      data,\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n\r\n    return {\r\n      responseData: response.data,\r\n    };\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const RegisterUser = async (moblie) => {\r\n  var data = {\r\n    citizenship: \"NONNRI\",\r\n    mobileNumber: moblie,\r\n  };\r\n  try {\r\n    const response = await axios.post(\r\n      API_BASE_URL + \"/newUserRegistration\",\r\n      data\r\n    );\r\n    return response.data.mobileOtpSession;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n// a\r\n\r\nexport const vaildateotp = async (\r\n  email,\r\n  moblie,\r\n  otp_data,\r\n  name,\r\n  password,\r\n  session,\r\n  referrerId\r\n) => {\r\n  const uniqnumber = localStorage.getItem(\"uniqnumber\");\r\n\r\n  if (uniqnumber === null) {\r\n    var data = {\r\n      mobileNumber: moblie,\r\n      mobileOtpSession: session,\r\n      mobileOtpValue: otp_data,\r\n      primaryType: \"LENDER\",\r\n      name: name,\r\n      email: email,\r\n      password: password,\r\n      citizenship: \"NONNRI\",\r\n      uniqueNumber: 0,\r\n      utm: \"WEB\",\r\n      // uuid: \"asdfghjkl\",\r\n      cifNumber: null,\r\n      finoEmployeeMobileNumber: null,\r\n    };\r\n  } else {\r\n    var data = {\r\n      mobileNumber: moblie,\r\n      mobileOtpSession: session,\r\n      mobileOtpValue: otp_data,\r\n      primaryType: \"LENDER\",\r\n      name: \"shiva\",\r\n      email: email,\r\n      password: password,\r\n      citizenship: \"NONNRI\",\r\n      uniqueNumber: uniqnumber,\r\n      utmForPartner: null,\r\n      utm: \"WEB\",\r\n      cifNumber: null,\r\n      finoEmployeeMobileNumber: null,\r\n      // uuid: \"asdfghjkl\",\r\n    };\r\n  }\r\n\r\n  try {\r\n    const response = await axios.post(\r\n      API_BASE_URL + \"/newUserRegistration\",\r\n      data\r\n    );\r\n\r\n    return {\r\n      responseData: response.data,\r\n    };\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n"],"names":["API_BASE_URL","handleApiRequestBeforeLogin","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","method","BASE_URL","End_Url","POSTDATA","response","wrap","_context","prev","next","axios","url","concat","data","headers","sent","status","abrupt","t0","stop","_x","_x2","_x3","_x4","apply","arguments","sendotpemail","_ref2","_callee2","email","_context2","_x5","Admlog","_ref3","_callee3","userid","password","accessTokenFromHeader","_context3","id","primaryType","sessionStorage","setItem","tokenGeneratedTime","_x6","_x7","userloginSection","_ref4","_callee4","checkLoginMode","postdata","_context4","includes","JSON","stringify","mobileNumber","_x8","_x9","sendwhatappotp","_ref5","_callee5","value1","value","_context5","replace","whatsappNumber","_x10","handlesenOtp","_ref6","_callee6","moblie","_context6","_x11","usersubmitotp","_ref7","_callee7","_context7","mobileOtpValue","_x12","_x13","verifywhatappotp","_ref8","_callee8","api","otp","_context8","localStorage","getItem","session","otpGeneratedTime","_x14","passwordupdated","_ref9","_callee9","emailToken","confirmPassword","_context9","_x15","_x16","_x17","_x18","_useState","useState","emailid","error","_useState2","_slicedToArray","setEmail","handleresetpassword","vaildatebu","sendOtpEmail","_objectSpread","toastrSuccess","toastrError","_jsx","_Fragment","children","className","_jsxs","src","login","alt","type","name","onChange","event","_event$target","target","_defineProperty","onClick","verifypannumber","pannumber","address","time","date","dob","panNumber","timeInMilliSeconds","emailOtp","emailOtpSession","userId","responseData","vaildateemail","match","validateRegisterInput","length","RegisterUser","citizenship","mobileOtpSession","vaildateotp","otp_data","referrerId","uniqnumber","uniqueNumber","utm","cifNumber","finoEmployeeMobileNumber","utmForPartner","_x19","_x20","_x21"],"sourceRoot":""}