{"version":3,"file":"static/js/672.9b68d1d3.chunk.js","mappings":"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","sources":["components/pages/Authentication/index.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport { registerImage } from \"../../imagepath\";\r\nimport ReactPasswordToggleIcon from \"react-password-toggle-icon\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport FeatherIcon from \"feather-icons-react\";\r\nimport { userloginSection } from \"../../HttpRequest/beforelogin\";\r\nimport { toastrSuccess, toastrWarning } from \"../Base UI Elements/Toast\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst Login = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useNavigate();\r\n  const [userLogInInfo, setUserLoginInfo] = useState({\r\n    email: \"\",\r\n    moblie: \"\",\r\n    loginwithotp: false,\r\n    password: \"\",\r\n    emailerror: \"\",\r\n    passworderror: \"\",\r\n    response: null,\r\n    dataIpv4: \"\",\r\n    oftermoblieotp: false,\r\n    otp: \"\",\r\n    dataIpv6: \"\",\r\n    error: null,\r\n    errormessage: \"\",\r\n  });\r\n\r\n  let inputRef = useRef();\r\n  const showIcon = () => (\r\n    <i className=\"feather feather-eye\" aria-hidden=\"true\">\r\n      <FeatherIcon icon=\"eye\" />\r\n    </i>\r\n  );\r\n  const hideIcon = () => (\r\n    <i className=\"feather feather-eye-slash\" aria-hidden=\"true\">\r\n      <FeatherIcon icon=\"eye-off\" />\r\n    </i>\r\n  );\r\n\r\n  const handlechange = (event) => {\r\n    const { name, value } = event.target;\r\n    setUserLoginInfo({\r\n      ...userLogInInfo,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const submitloginhandler = async () => {\r\n    if (userLogInInfo.email === \"\" || userLogInInfo.password === \"\") {\r\n      setUserLoginInfo((prevState) => ({\r\n        ...prevState,\r\n        emailerror:\r\n          userLogInInfo.email === \"\"\r\n            ? \"Please Enter the Email/Mobile Number\"\r\n            : \"\",\r\n        passworderror:\r\n          userLogInInfo.password === \"\" ? \"Please Enter The Password\" : \"\",\r\n      }));\r\n    } else {\r\n      let { email, password } = userLogInInfo;\r\n      const retriveresponse = await userloginSection(email, password);\r\n\r\n      if (retriveresponse.request.status == 200) {\r\n        toastrSuccess(\"Login Success !\");\r\n        // dispatch(getProfile({ res: retriveresponse.data }));\r\n\r\n        if (retriveresponse.data.primaryType == \"LENDER\") {\r\n          history(\"/dashboard\");\r\n        } else if (retriveresponse.data.primaryType == \"ADMIN\") {\r\n          history(\"/dashboard\");\r\n        } else {\r\n          history(\"/borrowerDashboard\");\r\n        }\r\n      } else {\r\n        toastrWarning(retriveresponse.response.data.errorMessage);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"main-wrapper login-body\">\r\n        <div className=\"login-wrapper\">\r\n          <div className=\"container\">\r\n            <div className=\"loginbox\">\r\n              <div className=\"login-left\">\r\n                <img\r\n                  className=\"img-fluid h-100\"\r\n                  src={registerImage}\r\n                  alt=\"Logo\"\r\n                />\r\n              </div>\r\n              <div className=\"login-right\">\r\n                <div className=\"login-right-wrap\">\r\n                  <h1>Welcome to Oxyloans</h1>\r\n\r\n                  <p className=\"account-subtitle\">\r\n                    Need an account? <Link to=\"/register\">Sign Up</Link>\r\n                  </p>\r\n                  <h2>Login</h2>\r\n\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"userloginusername\">\r\n                      Email/Mobile No <span className=\"login-danger\">*</span>\r\n                    </label>\r\n                    <input\r\n                      className=\"form-control\"\r\n                      type=\"text\"\r\n                      value={userLogInInfo.email}\r\n                      name=\"email\"\r\n                      onChange={handlechange}\r\n                      id=\"userloginusername\"\r\n                      required\r\n                    />\r\n                    <span className=\"profile-views\">\r\n                      <i className=\"fas fa-user-circle\" />\r\n                    </span>\r\n                    {userLogInInfo.emailerror && (\r\n                      <div className=\"text-danger\">\r\n                        {\" \"}\r\n                        {userLogInInfo.emailerror}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"userpassword\">\r\n                      Password <span className=\"login-danger\">*</span>\r\n                    </label>\r\n                    <input\r\n                      ref={inputRef}\r\n                      className=\"form-control pass-input\"\r\n                      type=\"password\"\r\n                      name=\"password\"\r\n                      id=\"userpassword\"\r\n                      value={userLogInInfo.password}\r\n                      onChange={handlechange}\r\n                      required\r\n                    />\r\n                    {userLogInInfo.error && (\r\n                      <div className=\"text-danger\">\r\n                        {userLogInInfo.errormessage}\r\n                      </div>\r\n                    )}{\" \"}\r\n                    {userLogInInfo.passworderror && (\r\n                      <div className=\"text-danger\">\r\n                        {\" \"}\r\n                        {userLogInInfo.passworderror}\r\n                      </div>\r\n                    )}\r\n                    <ReactPasswordToggleIcon\r\n                      inputRef={inputRef}\r\n                      showIcon={showIcon}\r\n                      hideIcon={hideIcon}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"forgotpass\">\r\n                    <div className=\"remember-me\">\r\n                      <Link to=\"/loginotp\">Login With OTP ?</Link>\r\n                    </div>\r\n                    <Link to=\"/forgotpassword\">Forgot Password?</Link>\r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n                    <button\r\n                      className=\"btn btn-primary btn-block\"\r\n                      type=\"button\"\r\n                      onClick={submitloginhandler}\r\n                    >\r\n                      Login\r\n                    </button>\r\n                  </div>\r\n\r\n                  <div className=\"login-or\">\r\n                    <span className=\"or-line\" />\r\n                    <span className=\"span-or\">or</span>\r\n                  </div>\r\n\r\n                  <div className=\"social-login\">\r\n                    {/* <Link to=\"#\">\r\n                      <i className=\"fab fa-google-plus-g\" />\r\n                    </Link> */}\r\n                    <Link to=\"/whatsapplogin\" className=\"bg-success text-white\">\r\n                      <i className=\"fa fa-whatsapp\" />{\" \"}\r\n                    </Link>\r\n                    {/* <Link onClick={() => {}} to=\"#\">\r\n                      <i className=\"fab fa-facebook-f\" />\r\n                    </Link>\r\n                    <Link to=\"#\">\r\n                      <i className=\"fab fa-twitter\" />\r\n                    </Link> */}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"names":["useDispatch","history","useNavigate","_useState","useState","email","moblie","loginwithotp","password","emailerror","passworderror","response","dataIpv4","oftermoblieotp","otp","dataIpv6","error","errormessage","_useState2","_slicedToArray","userLogInInfo","setUserLoginInfo","inputRef","useRef","handlechange","event","_event$target","target","name","value","_objectSpread","_defineProperty","submitloginhandler","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","retriveresponse","wrap","_context","prev","next","prevState","userloginSection","sent","request","status","toastrSuccess","data","primaryType","toastrWarning","errorMessage","stop","apply","arguments","_jsx","_Fragment","children","className","_jsxs","src","registerImage","alt","Link","to","htmlFor","type","onChange","id","required","ref","ReactPasswordToggleIcon","showIcon","FeatherIcon","icon","hideIcon","onClick"],"sourceRoot":""}