{"version":3,"file":"static/js/2080.028d5b14.chunk.js","mappings":"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","sources":["components/HttpRequest/beforelogin.js","components/pages/Authentication/Whatappuser.jsx"],"sourcesContent":["import axios from \"axios\";\r\nconst userisIn = \"prod\";\r\nlet API_BASE_URL =\r\n  userisIn == \"local\"\r\n    ? \"http://ec2-15-207-239-145.ap-south-1.compute.amazonaws.com:8080/oxyloans/v1/user/\"\r\n    : \"https://fintech.oxyloans.com/oxyloans/v1/user/\";\r\n\r\nconst handleApiRequestBeforeLogin = async (\r\n  method,\r\n  BASE_URL,\r\n  End_Url,\r\n  POSTDATA\r\n) => {\r\n  try {\r\n    const response = await axios({\r\n      method,\r\n      url: `${BASE_URL}${End_Url}`,\r\n      data: POSTDATA,\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n\r\n    if (response.status == 200) {\r\n      return response;\r\n    }\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const sendotpemail = async (email) => {\r\n  const data = {\r\n    email: email,\r\n    projectType: \"REACT\",\r\n  };\r\n  const response = handleApiRequestBeforeLogin(\r\n    \"POST\",\r\n    API_BASE_URL,\r\n    \"resetpassword\",\r\n    data\r\n  );\r\n  return response;\r\n};\r\n\r\nexport const Admlog = async (userid, password) => {\r\n  const data = {\r\n    id: userid,\r\n    primaryType: password,\r\n  };\r\n  const response = await handleApiRequestBeforeLogin(\r\n    \"POST\",\r\n    API_BASE_URL,\r\n    \"login?grantType=PWD\",\r\n    data\r\n  );\r\n\r\n  if (response.status == 200) {\r\n    const accessTokenFromHeader = response.headers[\"accesstoken\"];\r\n    sessionStorage.setItem(\"accessToken\", accessTokenFromHeader);\r\n    sessionStorage.setItem(\"userId\", response.data.id);\r\n    sessionStorage.setItem(\"tokenTime\", response.data.tokenGeneratedTime);\r\n    return response;\r\n  } else {\r\n    return response;\r\n  }\r\n};\r\nexport const userloginSection = async (email, password) => {\r\n  const checkLoginMode = email.includes(\"@\") == true ? true : false;\r\n  const postdata =\r\n    checkLoginMode === true\r\n      ? JSON.stringify({ password: password, email: email })\r\n      : JSON.stringify({\r\n          password: password,\r\n          mobileNumber: email,\r\n        });\r\n\r\n  const response = await handleApiRequestBeforeLogin(\r\n    \"POST\",\r\n    API_BASE_URL,\r\n    \"login?grantType=PWD\",\r\n    postdata\r\n  );\r\n\r\n  if (response.status == 200) {\r\n    const accessTokenFromHeader = response.headers[\"accesstoken\"];\r\n    sessionStorage.setItem(\"accessToken\", accessTokenFromHeader);\r\n    sessionStorage.setItem(\"userId\", response.data.id);\r\n    sessionStorage.setItem(\"tokenTime\", response.data.tokenGeneratedTime);\r\n    return response;\r\n  } else {\r\n    return response;\r\n  }\r\n};\r\nexport const sendwhatappotp = async (value1) => {\r\n  const value = value1.replace(\"+\", \"\");\r\n  const data = {\r\n    whatsappNumber: value,\r\n  };\r\n  const response = await handleApiRequestBeforeLogin(\r\n    \"POST\",\r\n    API_BASE_URL,\r\n    \"whatsapp-login-otp\",\r\n    data\r\n  );\r\n  return response;\r\n};\r\nexport const referrerdata = (referrerId, refParam) => {\r\n  const numericPart = referrerId.match(/\\d+$/);\r\n\r\n  if (referrerId !== \"\") {\r\n    const response = handleApiRequestBeforeLogin(\r\n      \"GET\",\r\n      API_BASE_URL,\r\n\r\n      `${numericPart}/user-uniquenumber`\r\n    );\r\n    return response;\r\n  } else {\r\n    const response = handleApiRequestBeforeLogin(\r\n      \"GET\",\r\n      API_BASE_URL,\r\n\r\n      `${refParam}/user-uniquenumber`\r\n    );\r\n    return response;\r\n  }\r\n};\r\n\r\nexport const handlesenOtp = async (moblie) => {\r\n  var data = {\r\n    mobileNumber: moblie,\r\n  };\r\n  const response = await handleApiRequestBeforeLogin(\r\n    \"POST\",\r\n    API_BASE_URL,\r\n    `sendOtp`,\r\n    data\r\n  );\r\n  return response;\r\n};\r\n\r\nexport const usersubmitotp = async (email, password) => {\r\n  const data = {\r\n    mobileNumber: email,\r\n    mobileOtpValue: password,\r\n  };\r\n  const response = await handleApiRequestBeforeLogin(\r\n    \"POST\",\r\n    API_BASE_URL,\r\n    `login?grantType=PWD `,\r\n    data\r\n  );\r\n  return response;\r\n};\r\n\r\nexport const handelapidata = async (userId) => {\r\n  const userid = userId.substring(2);\r\n  const data = {};\r\n  const response = await handleApiRequestBeforeLogin(\r\n    \"POST\",\r\n    API_BASE_URL,\r\n    `whatsapp-login-after-otp-verification/${userid}`,\r\n    data\r\n  );\r\n  return response;\r\n};\r\nexport const verifywhatappotp = async (api, whatsapploginotp) => {\r\n  const otpString = whatsapploginotp; // Concatenate the array elements into a single string\r\n  const otpNumber = parseInt(otpString, 10);\r\n  const data = {\r\n    whatsappNumber: api.whatsappNumber,\r\n    session: api.session,\r\n    otp: otpNumber,\r\n    id: api.id,\r\n    otpGeneratedTime: api.otpGeneratedTime,\r\n  };\r\n  const response = await handleApiRequestBeforeLogin(\r\n    \"POST\",\r\n    API_BASE_URL,\r\n    \"whatsapp-login-otp-verification\",\r\n    data\r\n  );\r\n  return response;\r\n};\r\n\r\n// export const handleip4 = () => {\r\n//   return handleApiRequestBeforeLogin(\r\n//     \"get\",\r\n//     \"https://api.ipify.org/?format=json\"\r\n//   );\r\n// };\r\n// export const handleipv6 = () => {\r\n//   return handleApiRequestBeforeLogin(\"get\", \"https://ipapi.co/json/\");\r\n// };\r\n\r\nexport const passwordupdated = async (\r\n  emailToken,\r\n  email,\r\n  password,\r\n  confirmPassword\r\n) => {\r\n  const data = {\r\n    password: password,\r\n    confirmPassword: confirmPassword,\r\n  };\r\n  const response = handleApiRequestBeforeLogin(\r\n    \"POST\",\r\n    API_BASE_URL,\r\n    `resetpassword/${emailToken}`,\r\n    data\r\n  );\r\n  return response;\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./user.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { handelapidata } from \"../../HttpRequest/beforelogin\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Whatappuser = ({ data }) => {\r\n  const [data1, setAppData] = useState(data);\r\n  console.log(\"Initial data1:\", data1);\r\n  const history = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const iswhatsAppLogin = sessionStorage.getItem(\"whatAppLoginMultipleUser\");\r\n    if (iswhatsAppLogin) {\r\n      const getdata = JSON.parse(sessionStorage.getItem(\"whatsAppLoginUsers\"));\r\n      setAppData(getdata);\r\n    }\r\n  }, []);\r\n\r\n  const handelapi = async (userId) => {\r\n    try {\r\n      const response = await handelapidata(userId);\r\n      const data = response.data;\r\n      const accessToken = response.headers.accesstoken;\r\n      // console.log(accessToken, data.primaryType);\r\n      if (accessToken != null) {\r\n        sessionStorage.setItem(\"accessToken\", accessToken);\r\n        sessionStorage.setItem(\"userId\", data.id);\r\n        sessionStorage.setItem(\"tokenTime\", data.tokenGeneratedTime);\r\n        sessionStorage.setItem(\"whatAppLoginMultipleUser\", true);\r\n        sessionStorage.setItem(\"whatsAppLoginUsers\", JSON.stringify(data1));\r\n\r\n        if (data.primaryType === \"LENDER\" || data.primaryType === \"ADMIN\") {\r\n          history(\"/dashboard\");\r\n        } else if (data.primaryType === \"BORROWER\") {\r\n          history(\"/borrowerDashboard\");\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"row col-12\">\r\n      <div\r\n        className=\"alert alert-primary col-12 vw-100 text-center\"\r\n        role=\"alert\"\r\n      >\r\n        Multiple users are mapped with the given WhatsApp number. To proceed,\r\n        please select the user you want to login or {\"\"}\r\n        <Link to=\"/\">\r\n          <span class=\"badge text-bg-secondary\"> Back to Home</span>\r\n        </Link>\r\n      </div>\r\n\r\n      <div className=\"d-flex  justify-content-start flex-row flex-wrap my-2\">\r\n        {data1 &&\r\n          data1.length > 0 &&\r\n          data1.map((userData, index) => (\r\n            <div\r\n              key={index}\r\n              className=\"col-md-3 col-12 col-sm-12 col-lg-3 mx-auto\"\r\n            >\r\n              <div className=\"panel price panel-red\">\r\n                <div className=\"panel-heading  text-center\">\r\n                  <h3>{userData.userId}</h3>\r\n                </div>\r\n                <div className=\"panel-body text-center\">\r\n                  <ul class=\"list-group list-group-flush text-center\">\r\n                    <li className=\"list-group-item\">\r\n                      <b className=\"paymembership_tenture\">{userData.name}</b>\r\n                    </li>\r\n                    <li className=\"list-group-item\">\r\n                      <b className=\"paymembership_tenture\"> {userData.email}</b>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n\r\n                <div className=\"panel-footer\">\r\n                  <button\r\n                    className=\"btn btn-xs btn-block btn-primary\"\r\n                    type=\"button\"\r\n                    onClick={() => handelapi(userData.userId)}\r\n                  >\r\n                    Login\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Whatappuser;\r\n"],"names":["API_BASE_URL","handleApiRequestBeforeLogin","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","method","BASE_URL","End_Url","POSTDATA","response","wrap","_context","prev","next","axios","url","concat","data","headers","sent","status","abrupt","t0","stop","_x","_x2","_x3","_x4","apply","arguments","sendotpemail","_ref2","_callee2","email","_context2","projectType","_x5","Admlog","_ref3","_callee3","userid","password","accessTokenFromHeader","_context3","id","primaryType","sessionStorage","setItem","tokenGeneratedTime","_x6","_x7","userloginSection","_ref4","_callee4","checkLoginMode","postdata","_context4","includes","JSON","stringify","mobileNumber","_x8","_x9","sendwhatappotp","_ref5","_callee5","value1","value","_context5","replace","whatsappNumber","_x10","handlesenOtp","_ref6","_callee6","moblie","_context6","_x11","usersubmitotp","_ref7","_callee7","_context7","mobileOtpValue","_x12","_x13","handelapidata","_ref8","_callee8","userId","_context8","substring","_x14","verifywhatappotp","_ref9","_callee9","api","whatsapploginotp","otpNumber","_context9","parseInt","session","otp","otpGeneratedTime","_x15","_x16","passwordupdated","_ref10","_callee10","emailToken","confirmPassword","_context10","_x17","_x18","_x19","_x20","_useState","useState","_useState2","_slicedToArray","data1","setAppData","console","log","history","useNavigate","useEffect","getItem","getdata","parse","handelapi","_data","accessToken","accesstoken","error","_jsxs","className","children","role","_jsx","Link","to","class","length","map","userData","index","name","type","onClick"],"sourceRoot":""}