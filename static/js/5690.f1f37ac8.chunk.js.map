{"version":3,"file":"static/js/5690.f1f37ac8.chunk.js","mappings":"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","sources":["components/HttpRequest/beforelogin.js","components/pages/Authentication/ForgotPassword3.jsx","components/pages/Authentication/api.js","components/pages/Base UI Elements/Toast.js"],"sourcesContent":["import axios from \"axios\";\r\nconst userisIn = \"prod\";\r\nlet API_BASE_URL =\r\n  userisIn == \"local\"\r\n    ? \"http://ec2-15-207-239-145.ap-south-1.compute.amazonaws.com:8080/oxyloans/v1/user/\"\r\n    : \"https://fintech.oxyloans.com/oxyloans/v1/user/\";\r\n\r\nconst handleApiRequestBeforeLogin = async (\r\n  method,\r\n  BASE_URL,\r\n  End_Url,\r\n  POSTDATA\r\n) => {\r\n  try {\r\n    const response = await axios({\r\n      method,\r\n      url: `${BASE_URL}${End_Url}`,\r\n      data: POSTDATA,\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n\r\n    if (response.status == 200) {\r\n      return response;\r\n    }\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const sendotpemail = async (email) => {\r\n  const data = {\r\n    email: email,\r\n    projectType: \"REACT\",\r\n  };\r\n  const response = handleApiRequestBeforeLogin(\r\n    \"POST\",\r\n    API_BASE_URL,\r\n    \"resetpassword\",\r\n    data\r\n  );\r\n  return response;\r\n};\r\n\r\nexport const Admlog = async (userid, password) => {\r\n  const data = {\r\n    id: userid,\r\n    primaryType: password,\r\n  };\r\n  const response = await handleApiRequestBeforeLogin(\r\n    \"POST\",\r\n    API_BASE_URL,\r\n    \"login?grantType=PWD\",\r\n    data\r\n  );\r\n\r\n  if (response.status == 200) {\r\n    const accessTokenFromHeader = response.headers[\"accesstoken\"];\r\n    sessionStorage.setItem(\"accessToken\", accessTokenFromHeader);\r\n    sessionStorage.setItem(\"userId\", response.data.id);\r\n    sessionStorage.setItem(\"tokenTime\", response.data.tokenGeneratedTime);\r\n    return response;\r\n  } else {\r\n    return response;\r\n  }\r\n};\r\nexport const userloginSection = async (email, password) => {\r\n  const checkLoginMode = email.includes(\"@\") == true ? true : false;\r\n  const postdata =\r\n    checkLoginMode === true\r\n      ? JSON.stringify({ password: password, email: email })\r\n      : JSON.stringify({\r\n          password: password,\r\n          mobileNumber: email,\r\n        });\r\n\r\n  const response = await handleApiRequestBeforeLogin(\r\n    \"POST\",\r\n    API_BASE_URL,\r\n    \"login?grantType=PWD\",\r\n    postdata\r\n  );\r\n\r\n  if (response.status == 200) {\r\n    const accessTokenFromHeader = response.headers[\"accesstoken\"];\r\n    sessionStorage.setItem(\"accessToken\", accessTokenFromHeader);\r\n    sessionStorage.setItem(\"userId\", response.data.id);\r\n    sessionStorage.setItem(\"tokenTime\", response.data.tokenGeneratedTime);\r\n    return response;\r\n  } else {\r\n    return response;\r\n  }\r\n};\r\nexport const sendwhatappotp = async (value1) => {\r\n  const value = value1.replace(\"+\", \"\");\r\n  const data = {\r\n    whatsappNumber: value,\r\n  };\r\n  const response = await handleApiRequestBeforeLogin(\r\n    \"POST\",\r\n    API_BASE_URL,\r\n    \"whatsapp-login-otp\",\r\n    data\r\n  );\r\n  return response;\r\n};\r\nexport const referrerdata = (referrerId, refParam) => {\r\n  const numericPart = referrerId.match(/\\d+$/);\r\n\r\n  if (referrerId !== \"\") {\r\n    const response = handleApiRequestBeforeLogin(\r\n      \"GET\",\r\n      API_BASE_URL,\r\n\r\n      `${numericPart}/user-uniquenumber`\r\n    );\r\n    return response;\r\n  } else {\r\n    const response = handleApiRequestBeforeLogin(\r\n      \"GET\",\r\n      API_BASE_URL,\r\n\r\n      `${refParam}/user-uniquenumber`\r\n    );\r\n    return response;\r\n  }\r\n};\r\n\r\nexport const handlesenOtp = async (moblie) => {\r\n  var data = {\r\n    mobileNumber: moblie,\r\n  };\r\n  const response = await handleApiRequestBeforeLogin(\r\n    \"POST\",\r\n    API_BASE_URL,\r\n    `sendOtp`,\r\n    data\r\n  );\r\n  return response;\r\n};\r\n\r\nexport const usersubmitotp = async (email, password) => {\r\n  const data = {\r\n    mobileNumber: email,\r\n    mobileOtpValue: password,\r\n  };\r\n  const response = await handleApiRequestBeforeLogin(\r\n    \"POST\",\r\n    API_BASE_URL,\r\n    `login?grantType=PWD `,\r\n    data\r\n  );\r\n  return response;\r\n};\r\n\r\nexport const handelapidata = async (userId) => {\r\n  const userid = userId.substring(2);\r\n  const data = {};\r\n  const response = await handleApiRequestBeforeLogin(\r\n    \"POST\",\r\n    API_BASE_URL,\r\n    `whatsapp-login-after-otp-verification/${userid}`,\r\n    data\r\n  );\r\n  return response;\r\n};\r\nexport const verifywhatappotp = async (api, whatsapploginotp) => {\r\n  const otpString = whatsapploginotp; // Concatenate the array elements into a single string\r\n  const otpNumber = parseInt(otpString, 10);\r\n  const data = {\r\n    whatsappNumber: api.whatsappNumber,\r\n    session: api.session,\r\n    otp: otpNumber,\r\n    id: api.id,\r\n    otpGeneratedTime: api.otpGeneratedTime,\r\n  };\r\n  const response = await handleApiRequestBeforeLogin(\r\n    \"POST\",\r\n    API_BASE_URL,\r\n    \"whatsapp-login-otp-verification\",\r\n    data\r\n  );\r\n  return response;\r\n};\r\n\r\n// export const handleip4 = () => {\r\n//   return handleApiRequestBeforeLogin(\r\n//     \"get\",\r\n//     \"https://api.ipify.org/?format=json\"\r\n//   );\r\n// };\r\n// export const handleipv6 = () => {\r\n//   return handleApiRequestBeforeLogin(\"get\", \"https://ipapi.co/json/\");\r\n// };\r\n\r\nexport const passwordupdated = async (\r\n  emailToken,\r\n  email,\r\n  password,\r\n  confirmPassword\r\n) => {\r\n  const data = {\r\n    password: password,\r\n    confirmPassword: confirmPassword,\r\n  };\r\n  const response = handleApiRequestBeforeLogin(\r\n    \"POST\",\r\n    API_BASE_URL,\r\n    `resetpassword/${emailToken}`,\r\n    data\r\n  );\r\n  return response;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { login, registerImage } from \"../../imagepath\";\r\nimport * as api from \"./api\";\r\nimport { sendotpemail } from \"../../HttpRequest/beforelogin\";\r\nimport { toastrError, toastrSuccess } from \"../Base UI Elements/Toast\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ForgotPassword3 = () => {\r\n  const [email, setEmail] = useState({\r\n    emailid: \"\",\r\n    error: \"\",\r\n    data: {},\r\n  });\r\n\r\n  const handlechange = (event) => {\r\n    const { name, value } = event.target;\r\n    setEmail({\r\n      ...email,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleresetpassword = async () => {\r\n    const vaildatebu = api.vaildateemail(email.emailid);\r\n    if (vaildatebu) {\r\n      setEmail({\r\n        ...email,\r\n        error: vaildatebu,\r\n      });\r\n      return;\r\n    }\r\n    try {\r\n      const sendOtpEmail = await sendotpemail(email.emailid);\r\n\r\n      if (sendOtpEmail.status === 200) {\r\n        setEmail({\r\n          ...email,\r\n          data: sendOtpEmail,\r\n        });\r\n        toastrSuccess(\"We've sent an email to reset the password.\");\r\n      } else {\r\n        toastrError(\"error\");\r\n      }\r\n    } catch (error) {\r\n      setEmail({\r\n        ...email,\r\n        error: error,\r\n      });\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"main-wrapper login-body\">\r\n        <div className=\"login-wrapper\">\r\n          <div className=\"container\">\r\n            <div className=\"loginbox\">\r\n              <div className=\"login-left\">\r\n                <img\r\n                  className=\"img-fluid h-100\"\r\n                  src={registerImage}\r\n                  alt=\"Logo\"\r\n                />\r\n              </div>\r\n              <div className=\"login-right\">\r\n                <div className=\"login-right-wrap\">\r\n                  <h1>Reset Password</h1>\r\n                  <p className=\"account-subtitle\">\r\n                    Enter the email address associated with your account and\r\n                    we'll send you a link to reset your password ?{\" \"}\r\n                    <Link to=\"/\">Login</Link>\r\n                  </p>\r\n\r\n                  <div className=\"form-group\">\r\n                    <label>\r\n                      Email address\r\n                      <span className=\"login-danger\">*</span>\r\n                    </label>\r\n                    <input\r\n                      className=\"form-control\"\r\n                      type=\"text\"\r\n                      name=\"emailid\"\r\n                      onChange={handlechange}\r\n                    />\r\n                    <span className=\"profile-views\">\r\n                      <i className=\"fas fa-envelope\" />\r\n                    </span>\r\n                  </div>\r\n                  {email.error && (\r\n                    <div className=\"text-danger\">{email.error}</div>\r\n                  )}\r\n                  <div className=\"form-group\">\r\n                    <button\r\n                      className=\"btn btn-primary btn-block\"\r\n                      type=\"submit\"\r\n                      onClick={handleresetpassword}\r\n                    >\r\n                      Reset My Password\r\n                    </button>\r\n                  </div>\r\n                  <div className=\"form-group mb-0\"></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ForgotPassword3;\r\n","import axios from \"axios\";\r\nconst userisIn = \"prod\";\r\nconst API_BASE_URL =\r\n  userisIn == \"local\"\r\n    ? \"http://ec2-15-207-239-145.ap-south-1.compute.amazonaws.com:8080/oxyloans/v1/user/\"\r\n    : \"https://fintech.oxyloans.com/oxyloans/v1/user\";\r\n\r\nconst API_URL =\r\n  \"http://ec2-15-207-239-145.ap-south-1.compute.amazonaws.com:8080/oxyloans/v1/user/login?grantType=PWD\";\r\nconst API_URL_otp =\r\n  \"http://ec2-15-207-239-145.ap-south-1.compute.amazonaws.com:8080/oxyloans/v1/user/sendOtp\";\r\n// Function to perform the login API request\r\nexport const loginUser = async (email, password, dataIpv4, dataIpv6) => {\r\n  var data = {\r\n    password: password,\r\n    email: email,\r\n    ipAddress: dataIpv4,\r\n    ipAddressResponse: dataIpv6,\r\n    loginType: \"WEB\",\r\n  };\r\n  try {\r\n    const response = await axios.post(API_URL, data, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n    const accessTokenFromHeader = response.headers[\"accesstoken\"];\r\n    localStorage.setItem(\"token\", accessTokenFromHeader);\r\n\r\n    if (!accessTokenFromHeader) {\r\n      throw new Error(\"Access token not found in response headers\");\r\n    }\r\n\r\n    return {\r\n      accessToken: accessTokenFromHeader,\r\n      responseData: response.data,\r\n    };\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const validateInput = (email, password) => {\r\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n  if (!email || !email.match(emailRegex)) {\r\n    return \"Please enter a valid email address\";\r\n  }\r\n\r\n  if (!password || password.length < 6) {\r\n    return \"Password must be at least 6 characters long\";\r\n  }\r\n  return null;\r\n};\r\n\r\nexport const sendotpemail = async (email) => {\r\n  var data = {\r\n    email: email,\r\n  };\r\n  try {\r\n    const response = await axios.post(API_BASE_URL + \"/resetpassword\", data, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n\r\n    return {\r\n      responseData: response.data,\r\n    };\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const verifypannumber = async (pannumber, address, time, id, date) => {\r\n  var data = {\r\n    address: address,\r\n    dob: date,\r\n    panNumber: pannumber,\r\n    timeInMilliSeconds: time,\r\n    emailOtp: null,\r\n    emailOtpSession: null,\r\n    userId: id,\r\n  };\r\n  try {\r\n    const response = await axios.patch(\r\n      API_BASE_URL + \"/emailVerification\",\r\n      data,\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n\r\n    return {\r\n      responseData: response.data,\r\n    };\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const vaildateemail = (email) => {\r\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n  if (!email || !email.match(emailRegex)) {\r\n    return \"Please enter a valid email address\";\r\n  }\r\n  return null;\r\n};\r\nexport const validateRegisterInput = (email, password, moblie) => {\r\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n  if (!email || !email.match(emailRegex)) {\r\n    return \"Please enter a valid email address\";\r\n  }\r\n\r\n  if (!password || password.length < 6) {\r\n    return \"Password must be at least 6 characters long\";\r\n  }\r\n\r\n  const phoneNumberRegex = /^\\d{10}$/;\r\n  if (!moblie || !moblie.match(phoneNumberRegex)) {\r\n    return \"Please enter a valid 10-digit phone number\";\r\n  }\r\n\r\n  return null; // No validation error\r\n};\r\n\r\nexport const validatemoblie = (moblie) => {\r\n  const phoneNumberRegex = /^\\d{10}$/;\r\n  if (!moblie || !moblie.match(phoneNumberRegex)) {\r\n    return \"Please enter a valid 10-digit phone number\";\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const moblieloginotp = async (moblie) => {\r\n  var data = {\r\n    mobileNumber: moblie,\r\n  };\r\n  try {\r\n    const response = await axios.post(API_URL_otp, data);\r\n    return {\r\n      responseData: response.data,\r\n    };\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const validateotpsubmit = async (moblie, otp) => {\r\n  var data = {\r\n    mobileNumber: moblie,\r\n    mobileOtpValue: otp,\r\n  };\r\n  try {\r\n    const response = await axios.post(\r\n      API_BASE_URL + \"/login?grantType=PWD\",\r\n      data,\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n\r\n    return {\r\n      responseData: response.data,\r\n    };\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const RegisterUser = async (moblie) => {\r\n  var data = {\r\n    citizenship: \"NONNRI\",\r\n    mobileNumber: moblie,\r\n  };\r\n  try {\r\n    const response = await axios.post(\r\n      API_BASE_URL + \"/newUserRegistration\",\r\n      data\r\n    );\r\n    return response.data.mobileOtpSession;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n// a\r\n\r\nexport const vaildateotp = async (\r\n  email,\r\n  moblie,\r\n  otp_data,\r\n  name,\r\n  password,\r\n  session,\r\n  referrerId\r\n) => {\r\n  const uniqnumber = localStorage.getItem(\"uniqnumber\");\r\n  const utmForPartner = localStorage.getItem(\"type\");\r\n\r\n  if (uniqnumber === null) {\r\n    var data = {\r\n      mobileNumber: moblie,\r\n      mobileOtpSession: session,\r\n      mobileOtpValue: otp_data,\r\n      primaryType: \"LENDER\",\r\n      name: name,\r\n      email: email,\r\n      password: password,\r\n      citizenship: \"NONNRI\",\r\n      uniqueNumber: 0,\r\n      utm: \"WEB\",\r\n      // uuid: \"asdfghjkl\",\r\n      cifNumber: null,\r\n      finoEmployeeMobileNumber: null,\r\n      \r\n    };\r\n  } else {\r\n    var data = {\r\n      mobileNumber: moblie,\r\n      mobileOtpSession: session,\r\n      mobileOtpValue: otp_data,\r\n      primaryType: \"LENDER\",\r\n      name: name,\r\n      email: email,\r\n      password: password,\r\n      citizenship: \"NONNRI\",\r\n      uniqueNumber: uniqnumber,\r\n      utmForPartner: null,\r\n      utm: \"WEB\",\r\n      cifNumber: null,\r\n      finoEmployeeMobileNumber: null,\r\n      // uuid: \"asdfghjkl\",\r\n    };\r\n  }\r\n  if (utmForPartner === \"Borrower\") {\r\n    data.utmForPartner = \"\";\r\n    data.primaryType = \"Borrower\";\r\n    \r\n    localStorage.setItem(\"type\", \"\")\r\n  }\r\n  try {\r\n    const response = await axios.post(\r\n      API_BASE_URL + \"/newUserRegistration\",\r\n      data\r\n    );\r\n\r\n    return {\r\n      responseData: response.data,\r\n    };\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport alertify from \"alertifyjs\";\r\nimport \"../../../../node_modules/alertifyjs/build/css/alertify.css\";\r\nimport \"../../../../node_modules/alertifyjs/build/css/themes/semantic.css\";\r\n\r\nexport const toastrSuccess = (message, position = \"bottom-center\") => {\r\n  alertify.set(\"notifier\", \"position\", position);\r\n  alertify.success(message);\r\n};\r\nexport const toastrInfo = () => {\r\n  alertify.set(\"notifier\", \"position\", \"top-right\");\r\n  alertify.message(\"Have fun storming the castle!\");\r\n};\r\nexport const toastrWarning = (message) => {\r\n  alertify.set(\"notifier\", \"position\", \"top-right\");\r\n  alertify.error(message);\r\n};\r\nexport const topCenter1 = (messages) => {\r\n  alertify.set(\"notifier\", \"position\", \"top-center\");\r\n  alertify.message(messages);\r\n};\r\nexport const toastrError = (error) => {\r\n  alertify.set(\"notifier\", \"position\", \"top-right\");\r\n  alertify.error(error);\r\n};\r\nexport const topLeft = () => {\r\n  alertify.set(\"notifier\", \"position\", \"top-left\");\r\n  alertify.message(\"Top Left! Have fun storming\");\r\n};\r\nexport const topCenter = () => {\r\n  alertify.set(\"notifier\", \"position\", \"top-center\");\r\n  alertify.message(\"Top Center! Have fun storming\");\r\n};\r\nexport const topRight = () => {\r\n  alertify.set(\"notifier\", \"position\", \"top-right\");\r\n  alertify.message(\"Top Right! Have fun storming\");\r\n};\r\nexport const topFull = () => {\r\n  alertify.set(\"notifier\", \"position\", \"top-full\");\r\n  alertify.message(\"Top Full! Have fun storming\");\r\n};\r\nexport const bottomLeft = () => {\r\n  alertify.set(\"notifier\", \"position\", \"bottom-left\");\r\n  alertify.message(\"Bottom Left! Have fun storming\");\r\n};\r\nexport const bottomCenter = (message) => {\r\n  alertify.set(\"notifier\", \"position\", \"bottom-center\");\r\n  alertify.error(message);\r\n};\r\nexport const bottomRight = () => {\r\n  alertify.set(\"notifier\", \"position\", \"bottom-right\");\r\n  alertify.message(\"Bottom Right! Have fun storming\");\r\n};\r\nexport const bottomFull = () => {\r\n  alertify.set(\"notifier\", \"position\", \"bottom-full\");\r\n  alertify.message(\"Bottom Full! Have fun storming\");\r\n};\r\nexport const notifications = () => {\r\n  alertify.set(\"notifier\", \"position\", \"top-right\");\r\n  alertify.message(\"Notification! Have fun storming\");\r\n};\r\nexport const closeButton = () => {\r\n  alertify.set(\"notifier\", \"position\", \"top-right\");\r\n  alertify.success(\"Close Button! Have fun storming\");\r\n};\r\nexport const progessBar = () => {\r\n  var canDismiss = false;\r\n  var notification = alertify.success(\"You can dismiss this after Progessbar!\");\r\n  notification.ondismiss = function () {\r\n    return canDismiss;\r\n  };\r\n  setTimeout(function () {\r\n    canDismiss = true;\r\n  }, 3000);\r\n};\r\nexport const clearToast = () => {\r\n  alertify.message(\"Cleared\").dismissOthers();\r\n};\r\nconst show5 = () => {\r\n  var duration = 5;\r\n  alertify.set(\"notifier\", \"position\", \"top-right\");\r\n  var msg = alertify.message(\r\n    \"Auto-dismiss in \" + duration + \" seconds.\",\r\n    5,\r\n    function () {\r\n      clearInterval(interval);\r\n    }\r\n  );\r\n  var interval = setInterval(function () {\r\n    msg.setContent(\"Auto-dismiss in \" + --duration + \" seconds.\");\r\n  }, 1000);\r\n};\r\nexport const hide3 = () => {\r\n  var duration = 3;\r\n  alertify.set(\"notifier\", \"position\", \"top-right\");\r\n  var msg = alertify.message(\r\n    \"Auto-dismiss in \" + duration + \" seconds.\",\r\n    3,\r\n    function () {\r\n      clearInterval(interval);\r\n    }\r\n  );\r\n  var interval = setInterval(function () {\r\n    msg.setContent(\"Auto-dismiss in \" + --duration + \" seconds.\");\r\n  }, 1000);\r\n};\r\nexport const timeout5 = () => {\r\n  var duration = 5;\r\n  alertify.set(\"notifier\", \"position\", \"top-right\");\r\n  var msg = alertify.message(\r\n    \"Auto-dismiss in \" + duration + \" seconds.\",\r\n    5,\r\n    function () {\r\n      clearInterval(interval);\r\n    }\r\n  );\r\n  var interval = setInterval(function () {\r\n    msg.setContent(\"Auto-dismiss in \" + --duration + \" seconds.\");\r\n  }, 1000);\r\n};\r\nexport const sticky = () => {\r\n  var canDismiss = false;\r\n  var notification = alertify.success(\"Sticky Toaster have Fun\");\r\n  notification.ondismiss = function () {\r\n    return canDismiss;\r\n  };\r\n  setTimeout(function () {\r\n    canDismiss = true;\r\n  }, 100000);\r\n};\r\n"],"names":["API_BASE_URL","handleApiRequestBeforeLogin","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","method","BASE_URL","End_Url","POSTDATA","response","wrap","_context","prev","next","axios","url","concat","data","headers","sent","status","abrupt","t0","stop","_x","_x2","_x3","_x4","apply","arguments","sendotpemail","_ref2","_callee2","email","_context2","projectType","_x5","Admlog","_ref3","_callee3","userid","password","accessTokenFromHeader","_context3","id","primaryType","sessionStorage","setItem","tokenGeneratedTime","_x6","_x7","userloginSection","_ref4","_callee4","checkLoginMode","postdata","_context4","includes","JSON","stringify","mobileNumber","_x8","_x9","sendwhatappotp","_ref5","_callee5","value1","value","_context5","replace","whatsappNumber","_x10","handlesenOtp","_ref6","_callee6","moblie","_context6","_x11","usersubmitotp","_ref7","_callee7","_context7","mobileOtpValue","_x12","_x13","handelapidata","_ref8","_callee8","userId","_context8","substring","_x14","verifywhatappotp","_ref9","_callee9","api","whatsapploginotp","otpNumber","_context9","parseInt","session","otp","otpGeneratedTime","_x15","_x16","passwordupdated","_ref10","_callee10","emailToken","confirmPassword","_context10","_x17","_x18","_x19","_x20","_useState","useState","emailid","error","_useState2","_slicedToArray","setEmail","handleresetpassword","vaildatebu","sendOtpEmail","_objectSpread","toastrSuccess","toastrError","_jsx","_Fragment","children","className","_jsxs","src","registerImage","alt","Link","to","type","name","onChange","event","_event$target","target","_defineProperty","onClick","verifypannumber","pannumber","address","time","date","dob","panNumber","timeInMilliSeconds","emailOtp","emailOtpSession","responseData","vaildateemail","match","validateRegisterInput","length","RegisterUser","citizenship","mobileOtpSession","vaildateotp","otp_data","referrerId","uniqnumber","utmForPartner","localStorage","getItem","uniqueNumber","utm","cifNumber","finoEmployeeMobileNumber","_x21","message","position","undefined","alertify","toastrWarning","bottomCenter"],"sourceRoot":""}